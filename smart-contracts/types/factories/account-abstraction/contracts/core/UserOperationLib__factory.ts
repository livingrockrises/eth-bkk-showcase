/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  UserOperationLib,
  UserOperationLibInterface,
} from "../../../../account-abstraction/contracts/core/UserOperationLib";

const _abi = [
  {
    inputs: [],
    name: "PAYMASTER_DATA_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAYMASTER_POSTOP_GAS_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAYMASTER_VALIDATION_GAS_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523460175760879081601c823930815050f35b5f80fdfe60808060405260043610156011575f80fd5b5f3560e01c90816325093e1b14606757508063b29a8ff41460525763ede31502146039575f80fd5b5f366003190112604e57602060405160348152f35b5f80fd5b5f366003190112604e57602060405160148152f35b5f366003190112604e5780602460209252f3fea164736f6c634300081b000a";

type UserOperationLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UserOperationLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UserOperationLib__factory extends ContractFactory {
  constructor(...args: UserOperationLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      UserOperationLib & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): UserOperationLib__factory {
    return super.connect(runner) as UserOperationLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserOperationLibInterface {
    return new Interface(_abi) as UserOperationLibInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UserOperationLib {
    return new Contract(address, _abi, runner) as unknown as UserOperationLib;
  }
}
