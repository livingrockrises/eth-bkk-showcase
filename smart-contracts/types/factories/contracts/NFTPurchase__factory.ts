/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  NFTPurchase,
  NFTPurchaseInterface,
} from "../../contracts/NFTPurchase";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_paymentToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mintPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setMintPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234610447576115ee803803806100198161044b565b9283398101906080818303126104475780516001600160401b0381116104475782610045918301610470565b602082015190926001600160401b03821161044757610065918301610470565b604082015190916001600160a01b03821691829003610447576060015183519091906001600160401b03811161035b575f54600181811c9116801561043d575b602082101461033d57601f81116103db575b50602094601f821160011461037a579481929394955f9261036f575b50508160011b915f199060031b1c1916175f555b82516001600160401b03811161035b57600154600181811c91168015610351575b602082101461033d57601f81116102da575b506020601f821160011461027757819293945f9261026c575b50508160011b915f199060031b1c1916176001555b33156102595760068054336001600160a01b03198216811790925560405191906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a38115610217575081156101c857600980546001600160a01b03191691909117905560085560405161112c90816104c28239f35b60405162461bcd60e51b815260206004820152602160248201527f4d696e74207072696365206d7573742062652067726561746572207468616e206044820152600360fc1b6064820152608490fd5b62461bcd60e51b815260206004820152601d60248201527f496e76616c6964207061796d656e7420746f6b656e20616464726573730000006044820152606490fd5b631e4fbdf760e01b5f525f60045260245ffd5b015190505f80610133565b601f1982169060015f52805f20915f5b8181106102c2575095836001959697106102aa575b505050811b01600155610148565b01515f1960f88460031b161c191690555f808061029c565b9192602060018192868b015181550194019201610287565b60015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6601f830160051c81019160208410610333575b601f0160051c01905b818110610328575061011a565b5f815560010161031b565b9091508190610312565b634e487b7160e01b5f52602260045260245ffd5b90607f1690610108565b634e487b7160e01b5f52604160045260245ffd5b015190505f806100d3565b601f198216955f8052805f20915f5b8881106103c3575083600195969798106103ab575b505050811b015f556100e7565b01515f1960f88460031b161c191690555f808061039e565b91926020600181928685015181550194019201610389565b5f80527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563601f830160051c81019160208410610433575b601f0160051c01905b81811061042857506100b7565b5f815560010161041b565b9091508190610412565b90607f16906100a5565b5f80fd5b6040519190601f01601f191682016001600160401b0381118382101761035b57604052565b81601f82011215610447578051906001600160401b03821161035b5761049f601f8301601f191660200161044b565b928284526020838301011161044757815f9260208093018386015e830101529056fe6080806040526004361015610012575f80fd5b5f905f3560e01c90816301ffc9a714610ca35750806306fdde0314610beb578063081812fc14610baf578063095ea7b314610ac55780631249c58b1461075157806323b872dd1461073a5780633013ce291461071257806342842e0e146106e35780635e318e071461060c5780636352211e146105dc5780636817c76c146105bf57806370a082311461056e578063715018a6146105135780638da5cb5b146104eb57806395d89b41146103e3578063a22cb46514610348578063b88d4fde146102b3578063c87b56dd14610256578063e985e9c5146101fe578063f2fde38b146101755763f4a0a52814610105575f80fd5b3461017257602036600319011261017257600435610121610fc3565b801561012d5760085580f35b60405162461bcd60e51b815260206004820152601c60248201527f5072696365206d7573742062652067726561746572207468616e2030000000006044820152606490fd5b80fd5b50346101725760203660031901126101725761018f610d32565b610197610fc3565b6001600160a01b031680156101ea57600680546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a380f35b631e4fbdf760e01b82526004829052602482fd5b503461017257604036600319011261017257604061021a610d32565b91610223610d48565b9260018060a01b031681526005602052209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b346102af5760203660031901126102af57610272600435610f8f565b505f604051610282602082610d98565b526102ab604051610294602082610d98565b5f8152604051918291602083526020830190610d0e565b0390f35b5f80fd5b346102af5760803660031901126102af576102cc610d32565b6102d4610d48565b906044356064359267ffffffffffffffff84116102af57366023850112156102af5783600401359261030584610dce565b936103136040519586610d98565b80855236602482880101116102af576020815f92602461034699018389013786010152610341838383610e02565b610fea565b005b346102af5760403660031901126102af57610361610d32565b602435908115158092036102af576001600160a01b03169081156103d057335f52600560205260405f20825f5260205260405f2060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b50630b61174360e31b5f5260045260245ffd5b346102af575f3660031901126102af576040515f6001548060011c906001811680156104e1575b6020831081146104cd578285529081156104a9575060011461044b575b6102ab8361043781850382610d98565b604051918291602083526020830190610d0e565b91905060015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6915f905b80821061048f57509091508101602001610437610427565b919260018160209254838588010152019101909291610477565b60ff191660208086019190915291151560051b840190910191506104379050610427565b634e487b7160e01b5f52602260045260245ffd5b91607f169161040a565b346102af575f3660031901126102af576006546040516001600160a01b039091168152602090f35b346102af575f3660031901126102af5761052b610fc3565b600680546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102af5760203660031901126102af576001600160a01b0361058f610d32565b1680156105ac575f526003602052602060405f2054604051908152f35b6322718ad960e21b5f525f60045260245ffd5b346102af575f3660031901126102af576020600854604051908152f35b346102af5760203660031901126102af5760206105fa600435610f8f565b6040516001600160a01b039091168152f35b346102af5760203660031901126102af57610625610fc3565b5f602060018060a01b036009541660446040518094819363a9059cbb60e01b835233600484015260043560248401525af19081156106d8575f916106a9575b501561066c57005b60405162461bcd60e51b8152602060048201526015602482015274119959481dda5d1a191c985dd85b0819985a5b1959605a1b6044820152606490fd5b6106cb915060203d6020116106d1575b6106c38183610d98565b810190610dea565b81610664565b503d6106b9565b6040513d5f823e3d90fd5b346102af576103466106f436610d5e565b9060405192610704602085610d98565b5f8452610341838383610e02565b346102af575f3660031901126102af576009546040516001600160a01b039091168152602090f35b346102af5761034661074b36610d5e565b91610e02565b346102af575f3660031901126102af57600954604051636eb1769f60e11b81523360048201523060248201526001600160a01b0390911690602081604481855afa9081156106d8575f91610a93575b50600854809110610a4e575f91606460209260405194859384926323b872dd60e01b845233600485015230602485015260448401525af19081156106d8575f91610a2f575b50156109f25760016007540180600755602090604051906108068383610d98565b5f825233156109df575f8181526002845260409020546001600160a01b031680151590816109ae575b335f8181526003875260408082208054600101905585825260028852812080546001600160a01b0319168317905584919083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9080a45061099b57333b61089357005b6108cd9183916040519384928392630a85bd0160e11b84523360048501525f60248501526044840152608060648401526084830190610d0e565b03815f335af15f918161095b575b5061092d57503d15610926573d6108f181610dce565b906108ff6040519283610d98565b81523d5f8383013e5b8051918261092357633250574960e11b5f523360045260245ffd5b01fd5b6060610908565b6001600160e01b03191663757a42ff60e11b01905061094857005b633250574960e11b5f523360045260245ffd5b9091508281813d8311610994575b6109738183610d98565b810103126102af57516001600160e01b0319811681036102af5790836108db565b503d610969565b6339e3563760e11b5f525f60045260245ffd5b5f8381526004602052604080822080546001600160a01b031916905582825260038752902080545f1901905561082f565b633250574960e11b5f525f60045260245ffd5b60405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fd5b610a48915060203d6020116106d1576106c38183610d98565b816107e5565b60405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e7420746f6b656e20616c6c6f77616e6365000000006044820152606490fd5b90506020813d602011610abd575b81610aae60209383610d98565b810103126102af5751826107a0565b3d9150610aa1565b346102af5760403660031901126102af57610ade610d32565b602435610aea81610f8f565b33151580610b9c575b80610b6f575b610b5c5781906001600160a01b0384811691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9255f80a45f90815260046020526040902080546001600160a01b0319166001600160a01b03909216919091179055005b63a9fbf51f60e01b5f523360045260245ffd5b506001600160a01b0381165f90815260056020908152604080832033845290915290205460ff1615610af9565b506001600160a01b038116331415610af3565b346102af5760203660031901126102af57600435610bcc81610f8f565b505f526004602052602060018060a01b0360405f205416604051908152f35b346102af575f3660031901126102af576040515f5f548060011c90600181168015610c99575b6020831081146104cd578285529081156104a95750600114610c3d576102ab8361043781850382610d98565b5f8080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563939250905b808210610c7f57509091508101602001610437610427565b919260018160209254838588010152019101909291610c67565b91607f1691610c11565b346102af5760203660031901126102af576004359063ffffffff60e01b82168092036102af576020916380ac58cd60e01b8114908115610cfd575b8115610cec575b5015158152f35b6301ffc9a760e01b14905083610ce5565b635b5e139f60e01b81149150610cde565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b03821682036102af57565b602435906001600160a01b03821682036102af57565b60609060031901126102af576004356001600160a01b03811681036102af57906024356001600160a01b03811681036102af579060443590565b90601f8019910116810190811067ffffffffffffffff821117610dba57604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff8111610dba57601f01601f191660200190565b908160209103126102af575180151581036102af5790565b6001600160a01b03909116919082156109df575f828152600260205260409020546001600160a01b031692829033151580610efa575b5084610ec7575b805f52600360205260405f2060018154019055815f52600260205260405f20816bffffffffffffffffffffffff60a01b825416179055847fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a46001600160a01b0316808303610eaf57505050565b6364283d7b60e01b5f5260045260245260445260645ffd5b5f82815260046020526040902080546001600160a01b0319169055845f52600360205260405f205f198154019055610e3f565b90915080610f3e575b15610f105782905f610e38565b8284610f2857637e27328960e01b5f5260045260245ffd5b63177e802f60e01b5f523360045260245260445ffd5b503384148015610f6d575b80610f0357505f838152600460205260409020546001600160a01b03163314610f03565b505f84815260056020908152604080832033845290915290205460ff16610f49565b5f818152600260205260409020546001600160a01b0316908115610fb1575090565b637e27328960e01b5f5260045260245ffd5b6006546001600160a01b03163303610fd757565b63118cdaa760e01b5f523360045260245ffd5b9291813b610ff9575b50505050565b604051630a85bd0160e11b81523360048201526001600160a01b0394851660248201526044810191909152608060648201529216919060209082908190611044906084830190610d0e565b03815f865af15f91816110da575b506110a757503d156110a0573d61106881610dce565b906110766040519283610d98565b81523d5f602083013e5b8051908161109b5782633250574960e11b5f5260045260245ffd5b602001fd5b6060611080565b6001600160e01b03191663757a42ff60e11b016110c857505f808080610ff3565b633250574960e11b5f5260045260245ffd5b9091506020813d602011611117575b816110f660209383610d98565b810103126102af57516001600160e01b0319811681036102af57905f611052565b3d91506110e956fea164736f6c634300081b000a";

type NFTPurchaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTPurchaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTPurchase__factory extends ContractFactory {
  constructor(...args: NFTPurchaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    _paymentToken: AddressLike,
    _mintPrice: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      _paymentToken,
      _mintPrice,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    _paymentToken: AddressLike,
    _mintPrice: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name,
      symbol,
      _paymentToken,
      _mintPrice,
      overrides || {}
    ) as Promise<
      NFTPurchase & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NFTPurchase__factory {
    return super.connect(runner) as NFTPurchase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTPurchaseInterface {
    return new Interface(_abi) as NFTPurchaseInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): NFTPurchase {
    return new Contract(address, _abi, runner) as unknown as NFTPurchase;
  }
}
