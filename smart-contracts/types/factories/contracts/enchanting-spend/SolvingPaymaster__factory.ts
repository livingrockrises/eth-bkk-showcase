/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SolvingPaymaster,
  SolvingPaymasterInterface,
} from "../../../contracts/enchanting-spend/SolvingPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifyingSigner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lzEndpoint",
        type: "address",
      },
      {
        internalType: "string",
        name: "_identifier",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDelegate",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEndpointCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "InvalidNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidVersion",
    type: "error",
  },
  {
    inputs: [],
    name: "LzTokenUnavailable",
    type: "error",
  },
  {
    inputs: [],
    name: "NoExcess",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32",
      },
    ],
    name: "NoPeer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "msgValue",
        type: "uint256",
      },
    ],
    name: "NotEnoughNative",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "OnlyEndpoint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "sender",
        type: "bytes32",
      },
    ],
    name: "OnlyPeer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "bits",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "SafeCastOverflowedUintDowncast",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "srcEid",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "guid",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "peer",
        type: "bytes32",
      },
    ],
    name: "PeerSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
        ],
        internalType: "struct Origin",
        name: "origin",
        type: "tuple",
      },
    ],
    name: "allowInitializePath",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "appLabel",
        type: "uint16",
      },
      {
        components: [
          {
            internalType: "uint16",
            name: "appRequestLabel",
            type: "uint16",
          },
          {
            internalType: "uint32",
            name: "targetEid",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isBlockNum",
            type: "bool",
          },
          {
            internalType: "uint64",
            name: "blockNumOrTimestamp",
            type: "uint64",
          },
          {
            internalType: "uint16",
            name: "confirmations",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
        ],
        internalType: "struct SolvingPaymaster.EvmReadRequest[]",
        name: "_readRequests",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "computeSetting",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "targetEid",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isBlockNum",
            type: "bool",
          },
          {
            internalType: "uint64",
            name: "blockNumOrTimestamp",
            type: "uint64",
          },
          {
            internalType: "uint16",
            name: "confirmations",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
        ],
        internalType: "struct SolvingPaymaster.EvmComputeRequest",
        name: "_computeRequest",
        type: "tuple",
      },
    ],
    name: "buildCmd",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "data",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "endpoint",
    outputs: [
      {
        internalType: "contract ILayerZeroEndpointV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint48",
            name: "expiry",
            type: "uint48",
          },
        ],
        internalType: "struct SolvingPaymaster.WithdrawRequest",
        name: "withdrawRequest",
        type: "tuple",
      },
    ],
    name: "getHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "identifier",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
        ],
        internalType: "struct Origin",
        name: "",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "isComposeMsgSender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint48",
            name: "expiry",
            type: "uint48",
          },
        ],
        internalType: "struct SolvingPaymaster.WithdrawRequest",
        name: "withdrawRequest",
        type: "tuple",
      },
    ],
    name: "isValidWithdrawSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_request",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_response",
        type: "bytes",
      },
    ],
    name: "lzMap",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
        ],
        internalType: "struct Origin",
        name: "_origin",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "_executor",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_extraData",
        type: "bytes",
      },
    ],
    name: "lzReceive",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_cmd",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "_responses",
        type: "bytes[]",
      },
    ],
    name: "lzReduce",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "myInformation",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nextNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oAppVersion",
    outputs: [
      {
        internalType: "uint64",
        name: "senderVersion",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "receiverVersion",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32",
      },
    ],
    name: "peers",
    outputs: [
      {
        internalType: "bytes32",
        name: "peer",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualUserOpFeePerGas",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_channelId",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "_appLabel",
        type: "uint16",
      },
      {
        components: [
          {
            internalType: "uint16",
            name: "appRequestLabel",
            type: "uint16",
          },
          {
            internalType: "uint32",
            name: "targetEid",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isBlockNum",
            type: "bool",
          },
          {
            internalType: "uint64",
            name: "blockNumOrTimestamp",
            type: "uint64",
          },
          {
            internalType: "uint16",
            name: "confirmations",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
        ],
        internalType: "struct SolvingPaymaster.EvmReadRequest[]",
        name: "_requests",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "computeSetting",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "targetEid",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isBlockNum",
            type: "bool",
          },
          {
            internalType: "uint64",
            name: "blockNumOrTimestamp",
            type: "uint64",
          },
          {
            internalType: "uint16",
            name: "confirmations",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
        ],
        internalType: "struct SolvingPaymaster.EvmComputeRequest",
        name: "_computeRequest",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "nativeFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lzTokenFee",
                type: "uint256",
              },
            ],
            internalType: "struct MessagingFee",
            name: "fee",
            type: "tuple",
          },
        ],
        internalType: "struct MessagingReceipt",
        name: "receipt",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_delegate",
        type: "address",
      },
    ],
    name: "setDelegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_peer",
        type: "bytes32",
      },
    ],
    name: "setPeer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_channelId",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "_active",
        type: "bool",
      },
    ],
    name: "setReadChannel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyingSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawTokenExcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e080604052346104d1575f6131d9803803809161001d828661057c565b84398201906080838303126104d15782516001600160a01b03811693908481036104d15761004d6020830161059f565b9461005a6040840161059f565b606084015190936001600160401b0382116104d1570185601f820112156104d1578051906001600160401b03821161056857604051966100a4601f8401601f19166020018961057c565b828852602083830101116104d157815f926020809301838a015e870101523315610555575f8054336001600160a01b031982168117835560405193602093859360249385939290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36301ffc9a760e01b825263122a0e9b60e31b60048301525afa9081156104c6575f9161051a575b50156104d5576080526001600160a01b031660a0819052803b156104d1575f809160246040518094819363ca5eb5e160e01b83523360048401525af180156104c6576104b3575b5060405192602080850152601560408501527f4e6f7468696e67207265636569766564207965742e00000000000000000000006060850152606084526101cf60808561057c565b83516001600160401b03811161049f576101ea6003546105b3565b601f8111610451575b50602094601f82116001146103ee578394958291610226949592610316575b50508160011b915f199060031b1c19161790565b6003555b60c0528151906001600160401b0382116103da576102496002546105b3565b601f8111610381575b50602090601f8311600114610321579061027f93836103165750508160011b915f199060031b1c19161790565b6002555b604051612bd79081610602823960805181818161051601528181610757015281816107f5015281816108790152818161093a015281816117e801528181611a0301526129cb015260a0518181816106bf01528181610c3401528181610d3f0152818161132a0152818161192f01528181611f810152612053015260c05181818161149d0152818161169d015261187c0152f35b015190505f80610212565b90601f1983169360028352818320925b85811061036957508360019510610351575b505050811b01600255610283565b01515f1960f88460031b161c191690555f8080610343565b91926020600181928685015181550194019201610331565b600282526103ca907f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace601f850160051c810191602086106103d0575b601f0160051c01906105eb565b5f610252565b90915081906103bd565b634e487b7160e01b81526041600452602490fd5b601f198216956003855280852091855b88811061043957508360019596979810610421575b505050811b0160035561022a565b01515f1960f88460031b161c191690555f8080610413565b919260206001819286850151815501940192016103fe565b60038452610499907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c810191602085106103d057601f0160051c01906105eb565b5f6101f3565b634e487b7160e01b83526041600452602483fd5b6104bf91505f9061057c565b5f5f610188565b6040513d5f823e3d90fd5b5f80fd5b60405162461bcd60e51b815260206004820152601e60248201527f49456e747279506f696e7420696e74657266616365206d69736d6174636800006044820152606490fd5b90506020813d60201161054d575b816105356020938361057c565b810103126104d1575180151581036104d1575f610141565b3d9150610528565b631e4fbdf760e01b5f525f60045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b601f909101601f19168101906001600160401b0382119082101761056857604052565b51906001600160a01b03821682036104d157565b90600182811c921680156105e1575b60208310146105cd57565b634e487b7160e01b5f52602260045260245ffd5b91607f16916105c2565b8181106105f6575050565b5f81556001016105eb56fe60806040526004361015610011575f80fd5b5f5f3560e01c80630396cb60146119e457806313137d65146118cc57806317442b70146118aa5780631c985b7a14611858578063205c2878146117c357806323a3727a146116cc57806323d9ac9b146116875780633400288b1461165957806352b7512c146113595780635e280f1114611314578063715018a6146112ba57806373d4a13a146112135780637998a1c4146111445780637c627b2114610f715780637d25a05e14610f4b57806382413eac14610eee5780638da5cb5b14610ec75780639172f01214610a4b578063a8cb182f14610969578063b0d691fe14610924578063b73dd1da14610902578063bb0b6a53146108cd578063bb9fe6bf1461085d578063c23a5cea146107d0578063c399ec881461072b578063ca5eb5e11461069a578063cb74b14514610590578063d0e30db014610507578063e60c287c14610415578063eba1cf0814610294578063f0a9e48114610247578063f2fde38b146101c15763ff7bd03d14610185575f80fd5b346101be5760603660031901126101be5760209060409063ffffffff6101a9611e5f565b16815260018352205460405190602435148152f35b80fd5b50346101be5760203660031901126101be576101db611ad8565b6101e361283e565b6001600160a01b031680156102335781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b50346101be5760403660031901126101be57610261611a82565b602435908115158203610290576102869161027a61283e565b15610289573090612983565b80f35b8290612983565b8280fd5b50346101be5760403660031901126101be576004356001600160401b038111610402576102c5903690600401611a95565b91602435906001600160401b0382116101be57366023830112156101be578160040135926001600160401b0384116104025760248301943660248660051b860101116102905780600211610290575f19823560f01c0161040657600411610402576002806103339201612b0f565b9360609282935b8585101561039457602061038c6001928261035d60248a60051b8801018861270b565b90816040519685889651918291018688015e8501918483018c815237010187815203601f198101835282611b9d565b94019361033a565b60206103ea6014826103fe948b6040519582879351918291018585015e820190712fb932b23ab1b2b22fb0b8382630b132b61d60711b8483015261ffff60f01b1660328201520301600b19810184520182611b9d565b604051918291602083526020830190611cf4565b0390f35b5080fd5b63a9146eeb60e01b8352600483fd5b50346101be5760403660031901126101be576004356001600160401b03811161040257610446903690600401611a95565b91906024356001600160401b03811161029057610467903690600401611a95565b92909380156104f3576001833560f81c036104e4576003116101be5750601760206103fe9461049d600260016103ea9601612b0f565b8560405196879385850137820190742fb6b0b83832b22fb932b8bab2b9ba2630b132b61d60591b8483015261ffff60f01b1660358201520301600819810184520182611b9d565b63a9146eeb60e01b8252600482fd5b634e487b7160e01b82526032600452602482fd5b50806003193601126101be57807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b1561058d57816024916040519283809263b760faf960e01b825230600483015234905af18015610582576105715750f35b8161057b91611b9d565b6101be5780f35b6040513d84823e3d90fd5b50fd5b50346101be5760203660031901126101be576105aa611ad8565b6001600160a01b0381161561065d5733825260046020526040822060018060a01b0382165f5260205260405f2054801561064e5733835260046020526040832060018060a01b0383165f526020528260405f20553360145260345263a9059cbb60601b82526020826044601082855af1908160018451141615610630575b828060345280f35b3b153d171015610641575f80610628565b6390b8ec1890526004601cfd5b63360b1dbf60e11b8352600483fd5b60405162461bcd60e51b8152602060048201526015602482015274496e76616c696420746f6b656e206164647265737360581b6044820152606490fd5b50346101be5760203660031901126101be57806106b5611ad8565b6106bd61283e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156107275760405163ca5eb5e160e01b81526001600160a01b0390911660048201529082908290602490829084905af18015610582576105715750f35b5050fd5b50346101be57806003193601126101be576040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561058257829161079a575b602082604051908152f35b90506020813d6020116107c8575b816107b560209383611b9d565b810103126104025760209150515f61078f565b3d91506107a8565b50346101be5760203660031901126101be57806107eb611ad8565b6107f361283e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156107275760405163611d2e7560e11b81526001600160a01b0390911660048201529082908290602490829084905af18015610582576105715750f35b50346101be57806003193601126101be5761087661283e565b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b1561058d5781809160046040518094819363bb9fe6bf60e01b83525af18015610582576105715750f35b50346101be5760203660031901126101be57604060209163ffffffff6108f1611a82565b168152600183522054604051908152f35b50346101be57602061091c61091636611ca5565b9061273d565b604051908152f35b50346101be57806003193601126101be576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101be576101003660031901126101be5760043561ffff81168103610402576024356001600160401b038111610290576109a9903690600401611d76565b9060c036604319011261029057604051926109c384611b02565b60443560ff8116810361040257845260643563ffffffff81168103610402576020850152608435801515810361040257604085015260a4356001600160401b038116810361040257606085015260c43561ffff8116810361040257608085015260e435906001600160a01b03821682036101be576103fe6103ea8686868660a08401526121f5565b506101403660031901126101be57610a61611a82565b9060243561ffff81168103610402576044356001600160401b03811161029057610a8f903690600401611d76565b60c03660631901126102905760405190610aa882611b02565b60643560ff81168103610d2557825260843563ffffffff81168103610d2557602083015260a4358015158103610d2557604083015260c4356001600160401b0381168103610d2557606083015260e43561ffff81168103610d25576080830152610104356001600160a01b0381168103610d255760a0830152610124356001600160401b038111610d255790610b46610b5593923690600401611c0f565b93610b4f611e72565b506121f5565b9060405190610b6382611b67565b3482526020820191848352610b76611e72565b505190813403610eb457825180610d30575b508563ffffffff91610c21610ba06080979899612864565b95511515918460405194610bb386611b31565b168452602084019687526040840198895260608401908152878401928352610c0e604051998a98899788976302637a4560e41b8952604060048a0152511660448801525160648701525160a0608487015260e4860190611cf4565b90518482036043190160a4860152611cf4565b9051151560c483015233602483015203917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115610582578291610c9d575b60808260206040805192805184526001600160401b0383820151168385015201518051604084015201516060820152f35b80915060803d608011610d29575b610cb58183611b9d565b81010390608082126102905760405191610cce83611b4c565b815183526020820151906001600160401b0382168203610d25576040916020850152603f1901126102905760809250606060405191610d0c83611b67565b604081015183520151602082015260408201525f610c6c565b8480fd5b503d610cab565b60405163393f876560e21b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690602081600481855afa908115610ea9578891610e63575b506001600160a01b0316918215610e545787610dfe9281926040519060208201926323b872dd60e01b84523360248401526044830152606482015260648152610dc9608482611b9d565b519082865af13d15610e4c573d90610de082611bbe565b91610dee6040519384611b9d565b82523d89602084013e5b83612b6c565b8051908115159182610e24575b505015610b8857635274afe760e01b8652600452602485fd5b8192509060209181010312610e485760200151801590811503610e48575f80610e0b565b8680fd5b606090610df8565b6329b99a9560e11b8852600488fd5b90506020813d602011610ea1575b81610e7e60209383611b9d565b81010312610e9d57516001600160a01b0381168103610e9d575f610d7f565b8780fd5b3d9150610e71565b6040513d8a823e3d90fd5b6304fb820960e51b855234600452602485fd5b50346101be57806003193601126101be57546040516001600160a01b039091168152602090f35b50346101be57366003190160a08112610402576060136101be576064356001600160401b03811161040257610f27903690600401611a95565b50506084356001600160a01b03811690819003610402576020906040519030148152f35b50346101be5760403660031901126101be57602090610f68611a82565b50604051908152f35b50346101be5760803660031901126101be57600360043510156101be576024356001600160401b03811161040257610fad903690600401611a95565b610fb56129c9565b81016101808282031261029057610fcb82611aee565b906020830135906001600160401b038211610d2557610140610ff282611024948701611c2d565b946110008360408301612a38565b5061100e8360808301612a7f565b5061101d836101008301612a38565b5001612a38565b506001600160a01b0390811680845260046020818152938401805184165f9081529286529084526040808620915190931682529092529081902082905580519061106e8183611b9d565b60018252601f198101835b81811061110b57846111078585805161109181611b02565b84815284602082015284828201528460608201528460808201523060a08201526110ba836121c0565b526110c4826121c0565b508051906110d182611b02565b6003825284602083015284818301528460608301528460808301523060a083015251916110ff602084611b9d565b848352611ea4565b5080f35b602090835161111981611b02565b868152868382015286858201528660608201528660808201528660a082015282828701015201611079565b50346101be57806003193601126101be5760405190806002549061116782611d18565b80855291600181169081156111ec575060011461118f575b6103fe846103ea81860382611b9d565b600281527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace939250905b8082106111d2575090915081016020016103ea8261117f565b9192600181602092548385880101520191019092916111b9565b60ff191660208087019190915292151560051b850190920192506103ea915083905061117f565b50346101be57806003193601126101be5760405190806003549061123682611d18565b80855291600181169081156111ec575060011461125d576103fe846103ea81860382611b9d565b600381527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b939250905b8082106112a0575090915081016020016103ea8261117f565b919260018160209254838588010152019101909291611287565b50346101be57806003193601126101be576112d361283e565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101be57806003193601126101be576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101be5760603660031901126101be57600435906001600160401b0382116101be57816004019161012060031982360301126104025760e46113a69161139f6129c9565b018361270b565b806034949294116102905783019261016081850360331901126102905760348101356001600160401b038111611655578460346113e592840101611c2d565b926113f38560548401612a38565b9161141d6114048760948401612a7f565b96610154611416826101148601612a38565b9301612a38565b916040860193845194606088018051845260056020526040842061144089612ad4565b60018060a01b03165f5260205260ff60405f205416611642578051845260056020526040842061146f89612ad4565b60018060a01b03165f5260205260405f20600160ff198254161790556114c16114988a8a61273d565b8a51907f0000000000000000000000000000000000000000000000000000000000000000612894565b61163b576001915b60808a019260ff65ffffffffffff60a01b855160a01b169116179860018060a01b036114f482612ad4565b1686526004602090815260408088208d830180516001600160a01b03165f90815291909352208054919a82019182106116275761154765ffffffffffff9593989e986115a8989795936115779355612ad4565b604080516001600160a01b039092166020830152610180908201529c5160a06101a08f01526102408e0190611cf4565b99516001600160a01b03166101c08d0152516101e08c0152516102008b015251166102208901526060880190612ae8565b9560a086015b60028210611609576115ff87876115eb82896115dd8a6115d261012085018c612ae8565b610160840190612ae8565b03601f198101845283611b9d565b604051928392604084526040840190611cf4565b9060208301520390f35b602060408261161b6001948c51612ae8565b019801910190966115ae565b634e487b7160e01b88526011600452602488fd5b83916114c9565b51632c4dce9b60e21b8452600452602483fd5b8380fd5b50346101be5760403660031901126101be57610286611676611a82565b61167e61283e565b60243590612983565b50346101be57806003193601126101be576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101be57806003193601126101be57604051632fb4b21d60e11b6020820152600254826116fa82611d18565b916001811690811561179b5750600114611741575b6103fe836103ea602d82886c2fb13637b1b5a73ab6b132b91d60991b815243600d82015203600d810184520182611b9d565b909250600281527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b838210611784575050908101602401906103ea602d61170f565b60018160209254602485870101520191019061176a565b60ff1916602480860191909152831515909302840190920193506103ea9150602d905061170f565b50346101be5760403660031901126101be57806117de611ad8565b6117e661283e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156107275760405163040b850f60e31b81526001600160a01b03909116600482015260248035908201529082908290604490829084905af18015610582576105715750f35b50346101be5760206118a061187761186f36611ca5565b80929161273d565b9051907f0000000000000000000000000000000000000000000000000000000000000000612894565b6040519015158152f35b50346101be57806003193601126101be57604080516001815260026020820152f35b50366003190160e08112610402576060136101be576084356001600160401b03811161040257611900903690600401611a95565b505061190a611ac2565b5060c4356001600160401b0381116104025761192a903690600401611a95565b5050337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316036119d15761196c611967611e5f565b612864565b906024358092036119ae5760405162461bcd60e51b815260206004820152600f60248201526e139bdd081a5b5c1b195b595b9d1959608a1b6044820152606490fd5b60449163ffffffff6119be611e5f565b63309afaf360e21b845216600452602452fd5b6391ac5e4f60e01b815233600452602490fd5b506020366003190112611a7e576119f9611a82565b611a0161283e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b15611a7e5763ffffffff60245f926040519485938492621cb65b60e51b845216600483015234905af18015611a7357611a65575080f35b611a7191505f90611b9d565b005b6040513d5f823e3d90fd5b5f80fd5b6004359063ffffffff82168203611a7e57565b9181601f84011215611a7e578235916001600160401b038311611a7e5760208381860195010111611a7e57565b60a435906001600160a01b0382168203611a7e57565b600435906001600160a01b0382168203611a7e57565b35906001600160a01b0382168203611a7e57565b60c081019081106001600160401b03821117611b1d57604052565b634e487b7160e01b5f52604160045260245ffd5b60a081019081106001600160401b03821117611b1d57604052565b606081019081106001600160401b03821117611b1d57604052565b604081019081106001600160401b03821117611b1d57604052565b60e081019081106001600160401b03821117611b1d57604052565b90601f801991011681019081106001600160401b03821117611b1d57604052565b6001600160401b038111611b1d57601f01601f191660200190565b929192611be582611bbe565b91611bf36040519384611b9d565b829481845281830111611a7e578281602093845f960137010152565b9080601f83011215611a7e57816020611c2a93359101611bd9565b90565b919060a083820312611a7e5760405190611c4682611b31565b819380356001600160401b038111611a7e57608092611c66918301611c0f565b8352611c7460208201611aee565b6020840152604081013560408401526060810135606084015201359065ffffffffffff82168203611a7e5760800152565b906040600319830112611a7e576004356001600160401b038111611a7e576101208184036003190112611a7e5760040191602435906001600160401b038211611a7e57611c2a91600401611c2d565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b90600182811c92168015611d46575b6020831014611d3257565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611d27565b359061ffff82168203611a7e57565b6001600160401b038111611b1d5760051b60200190565b81601f82011215611a7e57803590611d8d82611d5f565b92611d9b6040519485611b9d565b828452602060c0818601940283010191818311611a7e57602001925b828410611dc5575050505090565b60c084830312611a7e5760405190611ddc82611b02565b611de585611d50565b8252602085013563ffffffff81168103611a7e57602083015260408501358015158103611a7e5760408301526060850135906001600160401b0382168203611a7e5782602092606060c0950152611e3e60808801611d50565b6080820152611e4f60a08801611aee565b60a0820152815201930192611db7565b60043563ffffffff81168103611a7e5790565b60405190611e7f82611b4c565b815f81525f60208201526040805191611e9783611b67565b5f83525f60208401520152565b90611eb891611eb1611e72565b505f6121f5565b9060405190611ec682611b67565b34825260208201915f8352611ed9611e72565b5051908134036121ad57825180612044575b509063ffffffff60809392611eff5f612864565b93511515611f6e60405192611f1384611b31565b5f8452602084019687526040840198895260608401908152878401928352610c0e604051998a98899788976302637a4560e41b8952604060048a0152511660448801525160648701525160a0608487015260e4860190611cf4565b9051151560c483015233602483015203917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115611a73575f91611fbc575090565b80915060803d60801161203d575b611fd48183611b9d565b8101039060808212611a7e5760405191611fed83611b4c565b815183526020820151906001600160401b0382168203611a7e576040916020850152603f190112611a7e5760606040519161202783611b67565b6040810151835201516020820152604082015290565b503d611fca565b60405163393f876560e21b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169190602081600481865afa908115611a73575f9161216b575b506001600160a01b031691821561215c575f8091612112936040519060208201926323b872dd60e01b845233602484015260448301526064820152606481526120de608482611b9d565b519082865af13d15610e4c573d906120f582611bbe565b916121036040519384611b9d565b82523d5f602084013e83612b6c565b8051908115159182612138575b505015611eeb57635274afe760e01b5f5260045260245ffd5b8192509060209181010312611a7e5760200151801590811503611a7e575f8061211f565b6329b99a9560e11b5f5260045ffd5b90506020813d6020116121a5575b8161218660209383611b9d565b81010312611a7e57516001600160a01b0381168103611a7e575f612094565b3d9150612179565b6304fb820960e51b5f523460045260245ffd5b8051156121cd5760200190565b634e487b7160e01b5f52603260045260245ffd5b80518210156121cd5760209160051b010190565b929190928351156126c65783519161220c83611d5f565b9261221a6040519485611b9d565b808452612229601f1991611d5f565b015f5b8181106126845750505f5b85518110156122f6578061224d600192886121e1565b5161ffff8151169063ffffffff6020820151169060408101511515906001600160401b0360608201511661ffff6080830151169160a08880821b039101511692604051946311d1b93d60e11b6020870152600486526122ad602487611b9d565b604051966122ba88611b82565b8752602087015260408601526060850152608084015260a083015260c08201526122e482876121e1565b526122ef81866121e1565b5001612237565b5092909350600360ff8451161161263357825160ff1660038103612622575f905b60408501511515906001600160401b036060870151169661ffff6080880151169660a0600180821b0391015116906040519261235284611b02565b835263ffffffff602084019516855260408301938452606083019889526080830197885260a083019182526123878751612b45565b604051600160f01b60208201526001600160f01b031960f093841b811660228301529190921b166024820152600681526123c2602682611b9d565b965f975b875189101561252e576123d989896121e1565b5180519060c081018051516023810180911161251a576123f890612b45565b6020830151936040519485926020840197805160208192018a5e600160f81b60209186019182015260f093841b6001600160f01b03199081166021830152600160f01b60238301529190931b16602583015260e01b6001600160e01b0319166027820152600b919003908101845261247390602b0184611b9d565b604082015115159060608301519260808101519060a00151915193604051968796518091602089015e86019360f81b60208501526001600160401b0360c01b9060c01b16602184015261ffff60f01b9060f01b1660298301526bffffffffffffffffffffffff199060601b16602b82015281516020819301603f83015e01602001601f81015f905203601f01601f19810182526125109082611b9d565b97600101976123c6565b634e487b7160e01b5f52601160045260245ffd5b9650919396509193968596519363ffffffff8516612551575b5050505050505090565b60209750926027959288959261261698955194511515905191519251936040519a878c9851918291018a8a015e600160f81b90880189810191909152600160f01b602182015260f896871b6001600160f81b031916602382015260e09190911b6001600160e01b0319166024820152941b602885015260c01b6001600160c01b031916602984015260f01b6001600160f01b031916603183015260601b6bffffffffffffffffffffffff19166033820152600791900390910190810184520182611b9d565b5f808080808080612547565b63ffffffff60208501511690612317565b60405162461bcd60e51b815260206004820152602360248201527f4c7a52656164436f756e7465723a20696e76616c696420636f6d70757465207460448201526279706560e81b6064820152608490fd5b60209060405161269381611b82565b5f81525f838201525f60408201525f60608201525f60808201525f60a0820152606060c08201528282880101520161222c565b60405162461bcd60e51b815260206004820152601d60248201527f4c7a52656164436f756e7465723a20656d7074792072657175657374730000006044820152606490fd5b903590601e1981360301821215611a7e57018035906001600160401b038211611a7e57602001918136038313611a7e57565b9061275561274e604084018461270b565b3691611bd9565b602081519101209161276d61274e606083018361270b565b602081519101209161278260e083018361270b565b603493919311611a7e5760018060a01b0360208301511660c0604084015192601465ffffffffffff6080606088015197015116966040519860208a019a60018060a01b038535168c52602085013560408c015260608b015260808a0152608083013560a08a015201358288015260a081013560e0880152013561010086015246610120860152306101408601526101608501526101808401526101a08301526101c08201526101c081526128386101e082611b9d565b51902090565b5f546001600160a01b0316330361285157565b63118cdaa760e01b5f523360045260245ffd5b63ffffffff16805f52600160205260405f2054908115612882575090565b63f6ff4fb760e01b5f5260045260245ffd5b5f9392906001600160a01b0381161561297b576040519282518060401461295757604114612917575b85156128ca575b50505050565b602093949550630b135d3f60e11b855260048501526024840193849260408452805185019081604484019160045afa5060443d01915afa9051630b135d3f60e11b1416905f8080806128c4565b945060608201515f1a60205260408201516060525b845f5260208201516040526020600160805f825afa51811860601b3d11945f606052836040526128bd565b50604083015160ff81901c601b016020526001600160ff1b0316606052945061292c565b505f93505050565b7f238399d427b947898edb290f5ff0f9109849b1c3ba196a42e35f00c50a54b98b9163ffffffff6040921690815f52600160205280835f205582519182526020820152a1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036129fb57565b60405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606490fd5b9080601f83011215611a7e5760405191612a53604084611b9d565b829060408101928311611a7e57905b828210612a6f5750505090565b8135815260209182019101612a62565b81601f82011215611a7e5760409060405192612a9c604085611b9d565b83906080830192818411611a7e57915b838310612abb57505050505090565b60208591612ac98486612a38565b815201920191612aac565b356001600160a01b0381168103611a7e5790565b905f905b60028210612af957505050565b6020806001928551815201930191019091612aec565b356001600160f01b0319811692919060028210612b2a575050565b6001600160f01b031960029290920360031b82901b16169150565b61ffff8111612b555761ffff1690565b6306dfcc6560e41b5f52601060045260245260445ffd5b90612b905750805115612b8157805190602001fd5b630a12f52160e11b5f5260045ffd5b81511580612bc1575b612ba1575090565b639996b31560e01b5f9081526001600160a01b0391909116600452602490fd5b50803b15612b9956fea164736f6c634300081b000a";

type SolvingPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SolvingPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SolvingPaymaster__factory extends ContractFactory {
  constructor(...args: SolvingPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _entryPoint: AddressLike,
    _verifyingSigner: AddressLike,
    _lzEndpoint: AddressLike,
    _identifier: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _entryPoint,
      _verifyingSigner,
      _lzEndpoint,
      _identifier,
      overrides || {}
    );
  }
  override deploy(
    _entryPoint: AddressLike,
    _verifyingSigner: AddressLike,
    _lzEndpoint: AddressLike,
    _identifier: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _entryPoint,
      _verifyingSigner,
      _lzEndpoint,
      _identifier,
      overrides || {}
    ) as Promise<
      SolvingPaymaster & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SolvingPaymaster__factory {
    return super.connect(runner) as SolvingPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SolvingPaymasterInterface {
    return new Interface(_abi) as SolvingPaymasterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SolvingPaymaster {
    return new Contract(address, _abi, runner) as unknown as SolvingPaymaster;
  }
}
