/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Verifier,
  VerifierInterface,
} from "../../../contracts/enchanting-spend/Verifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "_pA",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "_pB",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "_pC",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "_pubSignals",
        type: "uint256[2]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346015576104eb908161001a8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c63f5c9d69e14610024575f80fd5b3461036b5761014036600319011261036b5761003f3661036f565b3660c41161036b576020907f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47826100753661037c565b926101026100823661038a565b6104006040526100fd813561009681610399565b6100b0604087850135946100a986610399565b0135610399565b7f129254b60453342e2be656d0ece3e52b030d50431b8ff3973d21ed241d9ab70a6080527f05194daabf46705749a74258f579d38ff7058d927f1c22338380e0d9581e802a60a0526103ca565b610454565b80356101005201358103066101205260443561014052606435610160526084356101805260a4356101a0527f173fb2fbd8c3e2d8bee35ea11dd6809220debb455e8137c27eb7f20c1f751b066101c0527f166f5e39470c96cf9be3f630fd667cf566b2493ae6d54e28fb17ec0c5ac0c47f6101e0527f0d817d9e63f54c5406571c572493b7041bb0b02bd3e4d0f5bad0ecea6b45713c610200527f1d870a952c3e340dc55e24f22592471b76c6a3ee54ccb68858ca8d19ee9dddb6610220527f1d4a5839d8aa7066676e261272f88235cdd0fd98464aab0f336eef679d4676f0610240527f29b4cbe5c56622abdb13e0370122974f5c32df803b08a3a868179e276b8fe937610260526080516102805260a0516102a0527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26102c0527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6102e0527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b610300527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa610320528035610340520135610360527f03eb136966b0214aa317af620e860513a2fb8c49a8fb6bc4078ee0345c49bf55610380527f2405c45dda64fbc2cc742f60a8bd9a302c6f1a232928b2b8ab440ca9236397316103a0527f160e7b4daa8c1682d47f44694fc0626daa907ff5e8c380f343d1384dbc1be6e36103c0527f2de04fa3b776de50e2bdebe46bb10371182127ad338f7ad3d653f0e86d55fcf36103e05260206101006103008160086107cf195a01fa61010051165f5260205ff35b5f80fd5b9060049160441161036b57565b9060c4916101041161036b57565b90610104916101441161036b57565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000111156103c257565b5f805260205ff35b6040517f2ee059fdbca90430275343aba208202f8efe507fe715a107ac17b35623d6b5a281527f07c13479b6230d325c0b95a97fd963dfc52ed1d5daf233c067da1ad5c750dacc60208201526040810191825260408160608160076107cf195a01fa156103c257608080916040938251905260a051606082015260066107cf195a01fa156103c257565b6040517f1151886feb8bff3de8d1d56d1db2da42b971d1533226a6e8795061b15206f69481527f295d80a25f605f3f15e8ec041c4d6e19bf258254173d05c1b5b18dfc72a5e41a60208201526040810191825260408160608160076107cf195a01fa156103c257608080916040938251905260a051606082015260066107cf195a01fa156103c25756fea164736f6c634300081b000a";

type VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Verifier__factory extends ContractFactory {
  constructor(...args: VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Verifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Verifier__factory {
    return super.connect(runner) as Verifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifierInterface {
    return new Interface(_abi) as VerifierInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Verifier {
    return new Contract(address, _abi, runner) as unknown as Verifier;
  }
}
