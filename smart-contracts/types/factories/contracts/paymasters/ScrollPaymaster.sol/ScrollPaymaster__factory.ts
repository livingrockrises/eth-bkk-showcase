/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ScrollPaymaster,
  ScrollPaymasterInterface,
} from "../../../../contracts/paymasters/ScrollPaymaster.sol/ScrollPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_slotToRead",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "NewOwnerIsZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandoverRequest",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "OwnershipHandoverCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "OwnershipHandoverRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelOwnershipHandover",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "completeOwnershipHandover",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestL1BlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nft",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "result",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "ownershipHandoverExpiresAt",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualUserOpFeePerGas",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestOwnershipHandover",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "slotToRead",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0806040523461019d57606081610c3f803803809161001f82856101b4565b83398101031261019d5780516001600160a01b038116919082810361019d5760208201516001600160a01b038116929083900361019d576020604060249201519433638b78c6d81955335f7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a36040516301ffc9a760e01b815263122a0e9b60e31b600482015292839182905afa9081156101a9575f9161016a575b5015610125576080525f80546001600160a01b031916919091179055600155604051610a5390816101ec82396080518181816101e10152818161028801528181610332015281816103ba01528181610424015281816106de015281816107bc015261089a0152f35b60405162461bcd60e51b815260206004820152601e60248201527f49456e747279506f696e7420696e74657266616365206d69736d6174636800006044820152606490fd5b90506020813d6020116101a1575b81610185602093836101b4565b8101031261019d5751801515810361019d575f6100bd565b5f80fd5b3d9150610178565b6040513d5f823e3d90fd5b601f909101601f19168101906001600160401b038211908210176101d757604052565b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f5f3560e01c80630396cb601461079457806305c42f241461074e578063205c2878146106b9578063256929621461066e57806347ccca021461064757806352b7512c146105c957806354d1f13d14610583578063715018a6146105385780637c627b211461049e57806387d28e01146104805780638da5cb5b14610453578063b0d691fe1461040e578063bb9fe6bf1461039e578063c23a5cea1461030d578063c399ec881461025b578063d0e30db0146101d2578063f04e283e14610179578063f2fde38b1461012b5763fee81cf4146100eb575f80fd5b3461012857602036600319011261012857600435906001600160a01b03821682036101285763389a75e1600c5252602080600c2054604051908152f35b80fd5b506020366003190112610128576004356001600160a01b03811681036101755761015361087c565b8060601b156101685761016590610a09565b80f35b637448fbae82526004601cfd5b5080fd5b506020366003190112610128576004356001600160a01b0381168103610175576101a161087c565b63389a75e1600c528082526020600c20805442116101c55790826101659255610a09565b636f5e881883526004601cfd5b508060031936011261012857807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b1561025857816024916040519283809263b760faf960e01b825230600483015234905af1801561024d5761023c5750f35b8161024691610846565b6101285780f35b6040513d84823e3d90fd5b50fd5b50346101285780600319360112610128576040516370a0823160e01b8152306004820152906020826024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561030157906102ca575b602090604051908152f35b506020813d6020116102f9575b816102e460209383610846565b810103126102f557602090516102bf565b5f80fd5b3d91506102d7565b604051903d90823e3d90fd5b50346101285760203660031901126101285780610328610830565b61033061087c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b1561039a5760405163611d2e7560e11b81526001600160a01b0390911660048201529082908290602490829084905af1801561024d5761023c5750f35b5050fd5b50346101285780600319360112610128576103b761087c565b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156102585781809160046040518094819363bb9fe6bf60e01b83525af1801561024d5761023c5750f35b50346101285780600319360112610128576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610128578060031936011261012857638b78c6d819546040516001600160a01b039091168152602090f35b50346101285780600319360112610128576020600154604051908152f35b503461012857608036600319011261012857600360043510156101285760243567ffffffffffffffff8111610175573660238201121561017557806004013567ffffffffffffffff81116105345736910160240111610128576104ff610898565b60405162461bcd60e51b815260206004820152600d60248201526c6d757374206f7665727269646560981b6044820152606490fd5b8280fd5b50806003193601126101285761054c61087c565b80638b78c6d819547f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380638b78c6d8195580f35b50806003193601126101285763389a75e1600c52338152806020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c928280a280f35b50346101285760603660031901126101285760043567ffffffffffffffff81116101755761012090600319903603011261012857610605610898565b60606020610611610907565b604092919251948593604085528051938491826040880152018686015e8383018501526020830152601f01601f19168101030190f35b5034610128578060031936011261012857546040516001600160a01b039091168152602090f35b50806003193601126101285763389a75e1600c523381526202a30042016020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d8280a280f35b503461012857604036600319011261012857806106d4610830565b6106dc61087c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b1561039a5760405163040b850f60e31b81526001600160a01b03909116600482015260248035908201529082908290604490829084905af1801561024d5761023c5750f35b50346101285780600319360112610128576040516308b338f160e31b8152906020826004816001605360981b015afa90811561030157906102ca57602090604051908152f35b5060203660031901126102f55760043563ffffffff81168091036102f5576107ba61087c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156102f5575f90602460405180948193621cb65b60e51b8352600483015234905af1801561082557610817575080f35b61082391505f90610846565b005b6040513d5f823e3d90fd5b600435906001600160a01b03821682036102f557565b90601f8019910116810190811067ffffffffffffffff82111761086857604052565b634e487b7160e01b5f52604160045260245ffd5b638b78c6d81954330361088b57565b6382b429005f526004601cfd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036108ca57565b60405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606490fd5b5f8080546001546040519060208201926bffffffffffffffffffffffff199060601b168352603482015260348152610940605482610846565b51906101015afa3d15610a01573d9067ffffffffffffffff82116108685760405191610976601f8201601f191660200184610846565b82523d5f602084013e5b156109cb57602081519181808201938492010103126102f557516109b5576040516109ac602082610846565b5f815290600190565b6040516109c3602082610846565b5f8152905f90565b60405162461bcd60e51b815260206004820152600e60248201526d130c54d313d0510819985a5b195960921b6044820152606490fd5b606090610980565b60018060a01b031680638b78c6d819547f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3638b78c6d8195556fea164736f6c634300081b000a";

type ScrollPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ScrollPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ScrollPaymaster__factory extends ContractFactory {
  constructor(...args: ScrollPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _entryPoint: AddressLike,
    _nftContract: AddressLike,
    _slotToRead: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _entryPoint,
      _nftContract,
      _slotToRead,
      overrides || {}
    );
  }
  override deploy(
    _entryPoint: AddressLike,
    _nftContract: AddressLike,
    _slotToRead: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _entryPoint,
      _nftContract,
      _slotToRead,
      overrides || {}
    ) as Promise<
      ScrollPaymaster & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ScrollPaymaster__factory {
    return super.connect(runner) as ScrollPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScrollPaymasterInterface {
    return new Interface(_abi) as ScrollPaymasterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ScrollPaymaster {
    return new Contract(address, _abi, runner) as unknown as ScrollPaymaster;
  }
}
