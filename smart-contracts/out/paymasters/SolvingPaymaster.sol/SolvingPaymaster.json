{"abi":[{"type":"constructor","inputs":[{"name":"_entryPoint","type":"address","internalType":"contract IEntryPoint"},{"name":"_verifyingSigner","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"addStake","inputs":[{"name":"unstakeDelaySec","type":"uint32","internalType":"uint32"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"deposit","inputs":[],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"entryPoint","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IEntryPoint"}],"stateMutability":"view"},{"type":"function","name":"getDeposit","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getHash","inputs":[{"name":"userOp","type":"tuple","internalType":"struct PackedUserOperation","components":[{"name":"sender","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"initCode","type":"bytes","internalType":"bytes"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"accountGasLimits","type":"bytes32","internalType":"bytes32"},{"name":"preVerificationGas","type":"uint256","internalType":"uint256"},{"name":"gasFees","type":"bytes32","internalType":"bytes32"},{"name":"paymasterAndData","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}]},{"name":"withdrawRequest","type":"tuple","internalType":"struct SolvingPaymaster.WithdrawRequest","components":[{"name":"signature","type":"bytes","internalType":"bytes"},{"name":"asset","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"expiry","type":"uint48","internalType":"uint48"}]}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"isValidWithdrawSignature","inputs":[{"name":"userOp","type":"tuple","internalType":"struct PackedUserOperation","components":[{"name":"sender","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"initCode","type":"bytes","internalType":"bytes"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"accountGasLimits","type":"bytes32","internalType":"bytes32"},{"name":"preVerificationGas","type":"uint256","internalType":"uint256"},{"name":"gasFees","type":"bytes32","internalType":"bytes32"},{"name":"paymasterAndData","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}]},{"name":"withdrawRequest","type":"tuple","internalType":"struct SolvingPaymaster.WithdrawRequest","components":[{"name":"signature","type":"bytes","internalType":"bytes"},{"name":"asset","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"expiry","type":"uint48","internalType":"uint48"}]}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"postOp","inputs":[{"name":"mode","type":"uint8","internalType":"enum IPaymaster.PostOpMode"},{"name":"context","type":"bytes","internalType":"bytes"},{"name":"actualGasCost","type":"uint256","internalType":"uint256"},{"name":"actualUserOpFeePerGas","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unlockStake","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"validatePaymasterUserOp","inputs":[{"name":"userOp","type":"tuple","internalType":"struct PackedUserOperation","components":[{"name":"sender","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"initCode","type":"bytes","internalType":"bytes"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"accountGasLimits","type":"bytes32","internalType":"bytes32"},{"name":"preVerificationGas","type":"uint256","internalType":"uint256"},{"name":"gasFees","type":"bytes32","internalType":"bytes32"},{"name":"paymasterAndData","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}]},{"name":"userOpHash","type":"bytes32","internalType":"bytes32"},{"name":"maxCost","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"context","type":"bytes","internalType":"bytes"},{"name":"validationData","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"verifyingSigner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"withdrawStake","inputs":[{"name":"withdrawAddress","type":"address","internalType":"address payable"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawTo","inputs":[{"name":"withdrawAddress","type":"address","internalType":"address payable"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawTokenExcess","inputs":[{"name":"token","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"error","name":"InvalidNonce","inputs":[{"name":"nonce","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"NoExcess","inputs":[]},{"type":"error","name":"OwnableInvalidOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"OwnableUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"}]}],"bytecode":{"object":"","sourceMap":"684:7886:5:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;684:7886:5;;;;;;;;;;;;-1:-1:-1;;;;;684:7886:5;;;;;;950:10:29;1273:26:8;1269:95;;-1:-1:-1;684:7886:5;;950:10:29;-1:-1:-1;;;;;;684:7886:5;;;;;;;;;;;;;1271:78:29;;684:7886:5;;;950:10:29;;-1:-1:-1;;;;;684:7886:5;;3052:40:8;;-1:-1:-1;3052:40:8;-1:-1:-1;;;1271:78:29;;-1:-1:-1;;;1271:78:29;;;684:7886:5;1271:78:29;;;;;;;-1:-1:-1;1271:78:29;;;-1:-1:-1;684:7886:5;;;;1023:24:29;;2287:34:5;;684:7886;;;;;;;;1023:24:29;684:7886:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2287:34;684:7886;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;684:7886:5;;;1271:78:29;684:7886:5;;;;1271:78:29;684:7886:5;;;;;;;;;;;1271:78:29;684:7886:5;1271:78:29;;684:7886:5;1271:78:29;;;;;;684:7886:5;1271:78:29;;;:::i;:::-;;;684:7886:5;;;;;;;;;;;;;1271:78:29;;;;684:7886:5;;;;;;;1271:78:29;;;-1:-1:-1;1271:78:29;;;684:7886:5;;;-1:-1:-1;684:7886:5;;;;;1269:95:8;1322:31;;;-1:-1:-1;1322:31:8;-1:-1:-1;1322:31:8;684:7886:5;;-1:-1:-1;1322:31:8;684:7886:5;-1:-1:-1;684:7886:5;;;;;;;-1:-1:-1;;684:7886:5;;;;-1:-1:-1;;;;;684:7886:5;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;684:7886:5;;;;;-1:-1:-1;684:7886:5","linkReferences":{}},"deployedBytecode":{"object":"0x6080604052600436101561001257600080fd5b6000803560e01c80630396cb60146109f95780631c985b7a146109a7578063205c28781461091257806323d9ac9b146108cd57806352b7512c14610666578063715018a61461060c5780637c627b21146105245780638da5cb5b146104fd578063b0d691fe146104b8578063b73dd1da14610496578063bb9fe6bf14610426578063c23a5cea14610395578063c399ec88146102ec578063cb74b145146101de578063d0e30db0146101555763f2fde38b146100cd57600080fd5b34610152576020366003190112610152576100e6610b1c565b6100ee610daa565b6001600160a01b0316801561013e5781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b80fd5b508060031936011261015257807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101db57816024916040519283809263b760faf960e01b825230600483015234905af180156101d0576101bf5750f35b816101c991610a98565b6101525780f35b6040513d84823e3d90fd5b50fd5b5034610152576020366003190112610152576101f8610b1c565b6001600160a01b038116156102af5733825260016020526040822060018060a01b03821660005260205260406000205480156102a05733835260016020526040832060018060a01b038316600052602052826040600020553360145260345263a9059cbb60601b82526020826044601082855af1908160018451141615610282575b828060345280f35b3b153d17101561029357388061027a565b6390b8ec1890526004601cfd5b63360b1dbf60e11b8352600483fd5b60405162461bcd60e51b8152602060048201526015602482015274496e76616c696420746f6b656e206164647265737360581b6044820152606490fd5b50346101525780600319360112610152576040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156101d057829161035b575b602082604051908152f35b90506020813d60201161038d575b8161037660209383610a98565b8101031261038957602091505138610350565b5080fd5b3d9150610369565b503461015257602036600319011261015257806103b0610b1c565b6103b8610daa565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156104225760405163611d2e7560e11b81526001600160a01b0390911660048201529082908290602490829084905af180156101d0576101bf5750f35b5050fd5b503461015257806003193601126101525761043f610daa565b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101db5781809160046040518094819363bb9fe6bf60e01b83525af180156101d0576101bf5750f35b50346101525760206104b06104aa36610be1565b90610ca9565b604051908152f35b50346101525780600319360112610152576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610152578060031936011261015257546040516001600160a01b039091168152602090f35b503461015257608036600319011261015257600360043510156101525760243567ffffffffffffffff8111610389573660238201121561038957806004013567ffffffffffffffff81116106045781019060248201913683116106085760409061058c610ec8565b82900312610604576105a060248201610b32565b9160448201359167ffffffffffffffff8311610600576105c39201602401610b46565b6001600160a01b03918216808452600160208181529283018051851660009081529286529083526040808620915190941682529091522081905580f35b8480fd5b8280fd5b8380fd5b5034610152578060031936011261015257610625610daa565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101525760603660031901126101525760043567ffffffffffffffff811161038957806004019061012060031982360301126106045760e46106b3916106ac610ec8565b0182610c76565b80603411610608578101602082820360331901126106085760348201359167ffffffffffffffff8311610600576106ed9201603401610b46565b906040820192835191606084018051835260026020526040832061071083610f37565b60018060a01b031660005260205260ff604060002054166108ba578051835260026020526040832061074183610f37565b60018060a01b03166000526020526040600020600160ff1982541617905561079561076c8684610ca9565b8651907f0000000000000000000000000000000000000000000000000000000000000000610dd3565b6108b3576001915b608086019260ff65ffffffffffff60a01b855160a01b169116179460018060a01b036107c883610f37565b16855260016020908152604080872089830180516001600160a01b03166000908152919093522080549196928201929091831061089f57509261081d65ffffffffffff936108959a9693610881989655610f37565b604080516001600160a01b03909216602083015281810152975160a060608a015288959061085090610100880190610c35565b94516001600160a01b031660808701525160a08601525160c0850152511660e083015203601f198101845283610a98565b604051928392604084526040840190610c35565b9060208301520390f35b634e487b7160e01b81526011600452602490fd5b829161079d565b51632c4dce9b60e21b8352600452602482fd5b50346101525780600319360112610152576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610152576040366003190112610152578061092d610b1c565b610935610daa565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156104225760405163040b850f60e31b81526001600160a01b03909116600482015260248035908201529082908290604490829084905af180156101d0576101bf5750f35b50346101525760206109ef6109c66109be36610be1565b809291610ca9565b9051907f0000000000000000000000000000000000000000000000000000000000000000610dd3565b6040519015158152f35b5060203660031901126101525760043563ffffffff811680910361038957610a1f610daa565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316908290823b15610389578190602460405180958193621cb65b60e51b8352600483015234905af18015610a8b57610a7d5780f35b610a8691610a98565b388180f35b50604051903d90823e3d90fd5b90601f8019910116810190811067ffffffffffffffff821117610aba57604052565b634e487b7160e01b600052604160045260246000fd5b92919267ffffffffffffffff8211610aba5760405191610afa601f8201601f191660200184610a98565b829481845281830111610b17578281602093846000960137010152565b600080fd5b600435906001600160a01b0382168203610b1757565b35906001600160a01b0382168203610b1757565b919060a083820312610b17576040519060a0820182811067ffffffffffffffff821117610aba576040528193803567ffffffffffffffff8111610b1757810182601f82011215610b1757608092816020610ba293359101610ad0565b8352610bb060208201610b32565b6020840152604081013560408401526060810135606084015201359065ffffffffffff82168203610b175760800152565b906040600319830112610b175760043567ffffffffffffffff8111610b17576101208184036003190112610b1757600401916024359067ffffffffffffffff8211610b1757610c3291600401610b46565b90565b919082519283825260005b848110610c61575050826000602080949584010152601f8019910116010190565b80602080928401015182828601015201610c40565b903590601e1981360301821215610b17570180359067ffffffffffffffff8211610b1757602001918136038313610b1757565b90610cc1610cba6040840184610c76565b3691610ad0565b6020815191012091610cd9610cba6060830183610c76565b6020815191012091610cee60e0830183610c76565b603493919311610b175760018060a01b0360208301511660c0604084015192601465ffffffffffff6080606088015197015116966040519860208a019a60018060a01b038535168c52602085013560408c015260608b015260808a0152608083013560a08a015201358288015260a081013560e0880152013561010086015246610120860152306101408601526101608501526101808401526101a08301526101c08201526101c08152610da46101e082610a98565b51902090565b6000546001600160a01b03163303610dbe57565b63118cdaa760e01b6000523360045260246000fd5b60009392906001600160a01b03811615610ebf5760405192825180604014610e9b57604114610e57575b8515610e0a575b50505050565b602093949550630b135d3f60e11b855260048501526024840193849260408452805185019081604484019160045afa5060443d01915afa9051630b135d3f60e11b14169038808080610e04565b9450606082015160001a60205260408201516060525b8460005260208201516040526020600160806000825afa51811860601b3d1194600060605283604052610dfd565b50604083015160ff81901c601b016020526001600160ff1b03166060529450610e6d565b50600093505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610efa57565b60405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606490fd5b356001600160a01b0381168103610b17579056","sourceMap":"684:7886:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;684:7886:5;;;;;;:::i;:::-;1500:62:8;;:::i;:::-;-1:-1:-1;;;;;684:7886:5;2627:22:8;;2623:91;;684:7886:5;;-1:-1:-1;;;;;;684:7886:5;;;;;;-1:-1:-1;;;;;684:7886:5;3052:40:8;684:7886:5;;3052:40:8;684:7886:5;;2623:91:8;-1:-1:-1;;;2672:31:8;;684:7886:5;;;;;2672:31:8;;684:7886:5;;;;;;;;;;;;;;4030:10:29;-1:-1:-1;;;;;684:7886:5;4030:53:29;;;;;684:7886:5;4030:53:29;684:7886:5;;;;;;;;;;4030:53:29;;4077:4;684:7886:5;4030:53:29;;684:7886:5;4058:9:29;4030:53;;;;;;;;;684:7886:5;;4030:53:29;;;;;:::i;:::-;684:7886:5;;4030:53:29;684:7886:5;4030:53:29;684:7886:5;;;;;;;;;4030:53:29;684:7886:5;;;;;;;;;-1:-1:-1;;684:7886:5;;;;;;:::i;:::-;-1:-1:-1;;;;;684:7886:5;;6714:19;684:7886;;6800:10;684:7886;;6786:13;684:7886;;;;;;;;;;;;-1:-1:-1;684:7886:5;;;;-1:-1:-1;684:7886:5;;6832:11;;6828:34;;6800:10;684:7886;;6786:13;684:7886;;;;;;;;;;;;-1:-1:-1;684:7886:5;;;;;-1:-1:-1;684:7886:5;;6800:10;13252:754:63;;;;;;;;;684:7886:5;13252:754:63;;;;;;;;;6786:13:5;13252:754:63;;;;;;;684:7886:5;13252:754:63;;;;684:7886:5;;13252:754:63;;;;;;;;;;;;;;;;;684:7886:5;13252:754:63;;6828:34:5;-1:-1:-1;;;6852:10:5;;684:7886;6852:10;;684:7886;;;-1:-1:-1;;;684:7886:5;;;;;;;;;;;;-1:-1:-1;;;684:7886:5;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4943:35:29;;4972:4;684:7886:5;4943:35:29;;684:7886:5;;;4943:35:29;684:7886:5;4943:10:29;-1:-1:-1;;;;;684:7886:5;4943:35:29;;;;;;;;;;;684:7886:5;;;;;;;;;4943:35:29;;;684:7886:5;4943:35:29;;684:7886:5;4943:35:29;;;;;;684:7886:5;4943:35:29;;;:::i;:::-;;;684:7886:5;;;;;;;;4943:35:29;;;684:7886:5;;;;4943:35:29;;;-1:-1:-1;4943:35:29;;684:7886:5;;;;;;;-1:-1:-1;;684:7886:5;;;;;;;:::i;:::-;1500:62:8;;:::i;:::-;5533:10:29;-1:-1:-1;;;;;684:7886:5;;5533:41:29;;;;;684:7886:5;;-1:-1:-1;;;5533:41:29;;-1:-1:-1;;;;;684:7886:5;;;;5533:41:29;;684:7886:5;;;;;;5533:41:29;;684:7886:5;;;;5533:41:29;;;;;;;;684:7886:5;;5533:41:29;684:7886:5;;;;;;;;;;;;;;;;1500:62:8;;:::i;:::-;684:7886:5;5196:10:29;-1:-1:-1;;;;;684:7886:5;5196:24:29;;;;;684:7886:5;;;;;;;;;;;;;5196:24:29;;;;;;;;;;684:7886:5;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;544:39:29;-1:-1:-1;;;;;684:7886:5;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;684:7886:5;;;;;;;;;;;;;;;-1:-1:-1;;684:7886:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2225:278:29;;;:::i;:::-;684:7886:5;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;684:7886:5;;;;;;;;;;;8211:21;;;860:38:29;;684:7886:5;;-1:-1:-1;684:7886:5;;;;;;;;;;;;;860:38:29;;684:7886:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:8;;:::i;:::-;684:7886:5;;-1:-1:-1;;;;;;684:7886:5;;;;;;-1:-1:-1;;;;;684:7886:5;3052:40:8;684:7886:5;;3052:40:8;684:7886:5;;;;;;;;;-1:-1:-1;;684:7886:5;;;;;;;;;;;;;;;;;;;;;;;;;5314:23;;1614:22:29;;;:::i;:::-;5314:23:5;;;:::i;:::-;860:38:29;490:2:31;860:38:29;;;5303:86:5;;684:7886;890:21;;;-1:-1:-1;;890:21:5;;;;490:2:31;860:38:29;;890:21:5;;684:7886;890:21;;;;;;;490:2:31;890:21:5;;:::i;:::-;5425:22;684:7886;5425:22;;860:38:29;;;5473:21:5;684:7886;5473:21;;860:38:29;;890:21:5;;5462:10;684:7886;890:21;684:7886;890:21;;5496:13;;;:::i;:::-;684:7886;;;;;;-1:-1:-1;684:7886:5;;;890:21;684:7886;-1:-1:-1;684:7886:5;890:21;;5458:121;;860:38:29;;890:21:5;;5462:10;684:7886;890:21;684:7886;890:21;;5623:13;;;:::i;:::-;684:7886;;;;;;-1:-1:-1;684:7886:5;;;;-1:-1:-1;684:7886:5;;890:21;;;;;;;;4415:139;4485:32;;;;:::i;:::-;4519:25;;4468:15;;4415:139;:::i;:::-;5751:17;;684:7886;5751:17;;5781:22;;;860:38:29;890:21:5;860:38:29;;;;;5808:3:5;860:38:29;;890:21:5;;5750:62;684:7886;;;;;;5837:13;;;:::i;:::-;684:7886;;;;;;;;;;;;5852:21;;;860:38:29;;-1:-1:-1;;;;;684:7886:5;-1:-1:-1;684:7886:5;;;;;;;;;;5852:21;;890;;;;684:7886;;890:21;-1:-1:-1;890:21:5;;;;6058:13;684:7886;890:21;684:7886;890:21;;;6047:42;890:21;;;6058:13;:::i;:::-;684:7886;;;-1:-1:-1;;;;;684:7886:5;;;;6047:42;;684:7886;890:21;;;;;;684:7886;;890:21;;;684:7886;;;890:21;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;684:7886:5;5781:22;890:21;;684:7886;890:21;684:7886;890:21;;684:7886;890:21;;;;684:7886;890:21;684:7886;;890:21;;860:38:29;6047:42:5;-1:-1:-1;;6047:42:5;;;;;;:::i;:::-;684:7886;;;;;;;;;;;;;:::i;:::-;;;;;;;;;890:21;-1:-1:-1;;;890:21:5;;;684:7886;890:21;684:7886;;890:21;5751:17;;;;;5458:121;860:38:29;-1:-1:-1;;;5533:35:5;;684:7886;;;860:38:29;5533:35:5;684:7886;;;;;;;;;;;;;;;786:40;-1:-1:-1;;;;;684:7886:5;;;;;;;;;;;;;-1:-1:-1;;684:7886:5;;;;;;;:::i;:::-;1500:62:8;;:::i;:::-;4373:10:29;-1:-1:-1;;;;;684:7886:5;;4373:46:29;;;;;684:7886:5;;-1:-1:-1;;;4373:46:29;;-1:-1:-1;;;;;684:7886:5;;;;4373:46:29;;684:7886:5;;;;;;;;;;;;;4373:46:29;;684:7886:5;;;;4373:46:29;;;;;;;;684:7886:5;;;;;;;;4415:139;4485:32;684:7886;;;:::i;:::-;4485:32;;;;:::i;:::-;4519:25;;4468:15;;4415:139;:::i;:::-;684:7886;;;;;;;;;-1:-1:-1;684:7886:5;;-1:-1:-1;;684:7886:5;;;;;;;;;;;;;;1500:62:8;;:::i;:::-;4730:10:29;-1:-1:-1;;;;;684:7886:5;;;;4730:54:29;;;;;684:7886:5;;4730:54:29;684:7886:5;;;;;;;;;4730:54:29;;684:7886:5;4730:54:29;;684:7886:5;4757:9:29;4730:54;;;;;;;;;684:7886:5;;4730:54:29;;;;:::i;:::-;;;684:7886:5;;4730:54:29;684:7886:5;;;;;;;;;;;;;;6047:42;;684:7886;;;;;;;;;;;;;;;;:::o;:::-;890:21;;;-1:-1:-1;684:7886:5;;;;;-1:-1:-1;684:7886:5;;;;;;;;;;;;;;6047:42;684:7886;;-1:-1:-1;;684:7886:5;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;684:7886:5;;;;;;:::o;:::-;-1:-1:-1;684:7886:5;;;;;;-1:-1:-1;;;;;684:7886:5;;;;;;:::o;:::-;;;-1:-1:-1;;;;;684:7886:5;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;684:7886:5;;;;;;;;;;;;;;;;-1:-1:-1;;684:7886:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6047:42;;684:7886;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2749:1117::-;;684:7886;3187:15;;;;;;:::i;:::-;684:7886;;;:::i;:::-;3147:12;684:7886;;;;3177:26;3231:15;684:7886;3231:15;;;;;;:::i;684:7886::-;3147:12;684:7886;;;;3221:26;3368:23;;;;;;;:::i;:::-;490:2:31;860:38:29;;;;;;684:7886:5;;;;;3147:12;3695:21;;860:38:29;684:7886:5;3601:14;3187:15;3734:22;;860:38:29;3774:21:5;372:2:31;684:7886:5;3265:23;3231:15;3774:21;;860:38:29;3813:22:5;;860:38:29;684:7886:5;;3187:15;684:7886;3095:754;3147:12;3095:754;;684:7886;;;;;;823:61:31;;684:7886:5;;;3147:12;;;684:7886;3187:15;860:38:29;;684:7886:5;3231:15;860:38:29;;684:7886:5;3265:23;860:38:29;;684:7886:5;3265:23;;;684:7886;3558:25;860:38:29;;684:7886:5;860:38:29;;;;;684:7886:5;3558:25;;;684:7886;3368:23;860:38:29;;684:7886:5;3601:14;684:7886;860:38:29;;;684:7886:5;3633:13;860:38:29;;;684:7886:5;3672:4;860:38:29;;;684:7886:5;860:38:29;;;684:7886:5;860:38:29;;;684:7886:5;860:38:29;;;684:7886:5;860:38:29;;;;;3095:754:5;;;;;;:::i;:::-;684:7886;3072:787;;2749:1117;:::o;1796:162:8:-;1710:6;684:7886:5;-1:-1:-1;;;;;684:7886:5;735:10:20;1855:23:8;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:20;1901:40:8;684:7886:5;;1710:6:8;1901:40;1974:1926:64;684:7886:5;;1974:1926:64;;-1:-1:-1;;;;;684:7886:5;;2136:20:64;2132:40;;2225:1669;;;;;;;;;;;684:7886:5;;;2225:1669:64;;;;;;1974:1926;;;;:::o;2225:1669::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2225:1669:64;;;;;;;;;;;;;;;;684:7886:5;2225:1669:64;;;;;;;;;;;684:7886:5;2225:1669:64;;;;;;;;;;684:7886:5;2225:1669:64;;;;;;;;;;;684:7886:5;2225:1669:64;;;;;;;;-1:-1:-1;2225:1669:64;;;;;;;;;;;;-1:-1:-1;;;;;2225:1669:64;;;;-1:-1:-1;2225:1669:64;;2132:40;-1:-1:-1;684:7886:5;;-1:-1:-1;;;2158:14:64:o;5660:135:29:-;5751:10;-1:-1:-1;;;;;684:7886:5;5729:10:29;:33;684:7886:5;;5660:135:29:o;684:7886:5:-;;;-1:-1:-1;;;684:7886:5;;;;;;;;;;;;-1:-1:-1;;;684:7886:5;;;;;;;890:21;;-1:-1:-1;;;;;684:7886:5;;;;;;890:21;:::o","linkReferences":{},"immutableReferences":{"1098":[{"start":1905,"length":32},{"start":2275,"length":32},{"start":2507,"length":32}],"6448":[{"start":356,"length":32},{"start":792,"length":32},{"start":954,"length":32},{"start":1090,"length":32},{"start":1230,"length":32},{"start":2359,"length":32},{"start":2593,"length":32},{"start":3786,"length":32}]}},"methodIdentifiers":{"addStake(uint32)":"0396cb60","deposit()":"d0e30db0","entryPoint()":"b0d691fe","getDeposit()":"c399ec88","getHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),(bytes,address,uint256,uint256,uint48))":"b73dd1da","isValidWithdrawSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),(bytes,address,uint256,uint256,uint48))":"1c985b7a","owner()":"8da5cb5b","postOp(uint8,bytes,uint256,uint256)":"7c627b21","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","unlockStake()":"bb9fe6bf","validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"52b7512c","verifyingSigner()":"23d9ac9b","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878","withdrawTokenExcess(address)":"cb74b145"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_verifyingSigner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"InvalidNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoExcess\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"}],\"internalType\":\"struct SolvingPaymaster.WithdrawRequest\",\"name\":\"withdrawRequest\",\"type\":\"tuple\"}],\"name\":\"getHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"}],\"internalType\":\"struct SolvingPaymaster.WithdrawRequest\",\"name\":\"withdrawRequest\",\"type\":\"tuple\"}],\"name\":\"isValidWithdrawSignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualUserOpFeePerGas\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyingSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawTokenExcess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidNonce(uint256)\":[{\"params\":{\"nonce\":\"The already used nonce.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The unstake delay for this paymaster. Can only be increased.\"}},\"isValidWithdrawSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),(bytes,address,uint256,uint256,uint48))\":{\"details\":\"Does not validate nonce or expiry.\",\"params\":{\"userOp\":\"The user operation.\",\"withdrawRequest\":\"The withdraw request.\"},\"returns\":{\"_0\":\"`true` if the signature is valid, else `false`.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas used so far (without this postOp call).\",\"actualUserOpFeePerGas\":\"- the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas                        and maxPriorityFee (and basefee)                        It is not the same as tx.gasprice, which is what the bundler pays.\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. The paymaster still has to pay for gas.                        postOpReverted - never passed in a call to postOp().\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    other values are invalid for paymaster.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"- Amount to withdraw.\",\"withdrawAddress\":\"- Target to send to.\"}},\"withdrawTokenExcess(address)\":{\"details\":\"Can be called back during the `UserOperation` execution to sponsor funds for non-gas related      use cases (e.g., swap or mint).\",\"params\":{\"token\":\"The ERC20 token address to withdraw\"}}},\"stateVariables\":{\"_nonceUsed\":{\"details\":\"Mappings keeping track of already used nonces per user to prevent replays of withdraw requests.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidNonce(uint256)\":[{\"notice\":\"Thrown when trying to replay a withdraw request with the same nonce.\"}],\"NoExcess()\":[{\"notice\":\"Thrown when trying to withdraw funds but nothing is available.\"}]},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"Add a deposit for this paymaster, used for paying for transaction fees.\"},\"getDeposit()\":{\"notice\":\"Return current paymaster's deposit on the entryPoint.\"},\"getHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),(bytes,address,uint256,uint256,uint48))\":{\"notice\":\"return the hash we're going to sign off-chain (and validate on-chain) this method is called by the off-chain service, to sign the request. it is called on-chain from the validatePaymasterUserOp, to validate the signature. note that this signature covers all fields of the UserOperation, except the \\\"paymasterAndData\\\", which will carry the signature itself.\"},\"isValidWithdrawSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),(bytes,address,uint256,uint256,uint48))\":{\"notice\":\"Returns whether the `withdrawRequest` signature is valid for the given `account`.\"},\"postOp(uint8,bytes,uint256,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"unlockStake()\":{\"notice\":\"Unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw value from the deposit.\"},\"withdrawTokenExcess(address)\":{\"notice\":\"Allows the sender to withdraw any available ERC20 tokens associated with their account.\"}},\"notice\":\"Paymaster that fronts funds based on a signature/ proof.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/paymasters/SolvingPaymaster.sol\":\"SolvingPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@openzeppelin/contracts/contracts/=node_modules/@openzeppelin/contracts/\",\":account-abstraction/=node_modules/account-abstraction/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solady/=node_modules/solady/\"],\"viaIR\":true},\"sources\":{\"contracts/paymasters/SolvingPaymaster.sol\":{\"keccak256\":\"0x0cd9c2711c4f09830c365476533bb6b290d84f9e6b787df79a21e518326a84f4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://002a9ebbc8c34ad074b368b3d41dbcbbdcd5138a721cdf4f06c515ad3d631412\",\"dweb:/ipfs/QmRG88D5wevPpjwS7GvsoXXxQ5tem4bHPNvNPQ5AarazGk\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"node_modules/account-abstraction/contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0x156dd80127599c02937985a4fe44dd6424e29445af9aae886aff0f1993af43ab\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9a6afd9203f905b1d9a95f354e06d9b61328e5d27844d96100175718edb859ef\",\"dweb:/ipfs/QmYyKGTMaTyjDKY1QyThLJL8BZgUrTAxrHL3SNmRJLqnji\"]},\"node_modules/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"node_modules/account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"node_modules/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"node_modules/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9\",\"dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe\"]},\"node_modules/account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]},\"node_modules/account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x49d8dbf8a85b006bcd89bbc40e4e9e113997cc016007de85263bdae70572d07f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bc0d83804c1b795d5c216b3518cd176c48f90db28550f267cbd89746d6b476c8\",\"dweb:/ipfs/QmNdCm4c6hnt7f6Q8q21QjtCNZWWRUaMVEYnQHEv68VnKt\"]},\"node_modules/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]},\"node_modules/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"node_modules/solady/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x7d0de1ff3be5dc32635283280b000d4794015a1b61d7dae7f3ff7b0721b07210\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e307c9eece677565e7d584ee77c56134b5db38a70f557f9d2b1b308219276c0c\",\"dweb:/ipfs/QmTEtqaTFgRBFGpJyb5o4v2w8yrSpcNThov4bNpcLr2tTR\"]},\"node_modules/solady/src/utils/SignatureCheckerLib.sol\":{\"keccak256\":\"0x0eb1575bafc5537fcb4bba519123c694db66840d7a13b7d3b867c55bf95e9c8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33b81539b6c6901660ab7c134789178146f18622813de5bc984d4c6dad7b13e6\",\"dweb:/ipfs/QmNdG7Y74GbymWqbhMbMY92AHYxLug9sR5gNWfzwB7hM1b\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IEntryPoint","name":"_entryPoint","type":"address"},{"internalType":"address","name":"_verifyingSigner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"type":"error","name":"InvalidNonce"},{"inputs":[],"type":"error","name":"NoExcess"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"type":"error","name":"OwnableInvalidOwner"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"type":"error","name":"OwnableUnauthorizedAccount"},{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"stateMutability":"payable","type":"function","name":"addStake"},{"inputs":[],"stateMutability":"payable","type":"function","name":"deposit"},{"inputs":[],"stateMutability":"view","type":"function","name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple","components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}]},{"internalType":"struct SolvingPaymaster.WithdrawRequest","name":"withdrawRequest","type":"tuple","components":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint48","name":"expiry","type":"uint48"}]}],"stateMutability":"view","type":"function","name":"getHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple","components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}]},{"internalType":"struct SolvingPaymaster.WithdrawRequest","name":"withdrawRequest","type":"tuple","components":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint48","name":"expiry","type":"uint48"}]}],"stateMutability":"view","type":"function","name":"isValidWithdrawSignature","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"internalType":"uint256","name":"actualUserOpFeePerGas","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"postOp"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceOwnership"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unlockStake"},{"inputs":[{"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple","components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}]},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"verifyingSigner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"withdrawStake"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"withdrawTo"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"withdrawTokenExcess"}],"devdoc":{"kind":"dev","methods":{"addStake(uint32)":{"params":{"unstakeDelaySec":"- The unstake delay for this paymaster. Can only be increased."}},"isValidWithdrawSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),(bytes,address,uint256,uint256,uint48))":{"details":"Does not validate nonce or expiry.","params":{"userOp":"The user operation.","withdrawRequest":"The withdraw request."},"returns":{"_0":"`true` if the signature is valid, else `false`."}},"owner()":{"details":"Returns the address of the current owner."},"postOp(uint8,bytes,uint256,uint256)":{"params":{"actualGasCost":"- Actual gas used so far (without this postOp call).","actualUserOpFeePerGas":"- the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas                        and maxPriorityFee (and basefee)                        It is not the same as tx.gasprice, which is what the bundler pays.","context":"- The context value returned by validatePaymasterUserOp","mode":"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. The paymaster still has to pay for gas.                        postOpReverted - never passed in a call to postOp()."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":{"params":{"maxCost":"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).","userOp":"- The user operation.","userOpHash":"- Hash of the user's request data."},"returns":{"context":"       - Value to send to a postOp. Zero length to signify postOp is not required.","validationData":"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    other values are invalid for paymaster.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly."}},"withdrawStake(address)":{"params":{"withdrawAddress":"- The address to send withdrawn value."}},"withdrawTo(address,uint256)":{"params":{"amount":"- Amount to withdraw.","withdrawAddress":"- Target to send to."}},"withdrawTokenExcess(address)":{"details":"Can be called back during the `UserOperation` execution to sponsor funds for non-gas related      use cases (e.g., swap or mint).","params":{"token":"The ERC20 token address to withdraw"}}},"version":1},"userdoc":{"kind":"user","methods":{"addStake(uint32)":{"notice":"Add stake for this paymaster. This method can also carry eth value to add to the current stake."},"deposit()":{"notice":"Add a deposit for this paymaster, used for paying for transaction fees."},"getDeposit()":{"notice":"Return current paymaster's deposit on the entryPoint."},"getHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),(bytes,address,uint256,uint256,uint48))":{"notice":"return the hash we're going to sign off-chain (and validate on-chain) this method is called by the off-chain service, to sign the request. it is called on-chain from the validatePaymasterUserOp, to validate the signature. note that this signature covers all fields of the UserOperation, except the \"paymasterAndData\", which will carry the signature itself."},"isValidWithdrawSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),(bytes,address,uint256,uint256,uint48))":{"notice":"Returns whether the `withdrawRequest` signature is valid for the given `account`."},"postOp(uint8,bytes,uint256,uint256)":{"notice":"Post-operation handler. Must verify sender is the entryPoint."},"unlockStake()":{"notice":"Unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again"},"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":{"notice":"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns."},"withdrawStake(address)":{"notice":"Withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)"},"withdrawTo(address,uint256)":{"notice":"Withdraw value from the deposit."},"withdrawTokenExcess(address)":{"notice":"Allows the sender to withdraw any available ERC20 tokens associated with their account."}},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/","@openzeppelin/contracts/contracts/=node_modules/@openzeppelin/contracts/","account-abstraction/=node_modules/account-abstraction/","ds-test/=node_modules/ds-test/src/","forge-std/=node_modules/forge-std/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","solady/=node_modules/solady/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none","appendCBOR":false},"compilationTarget":{"contracts/paymasters/SolvingPaymaster.sol":"SolvingPaymaster"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"contracts/paymasters/SolvingPaymaster.sol":{"keccak256":"0x0cd9c2711c4f09830c365476533bb6b290d84f9e6b787df79a21e518326a84f4","urls":["bzz-raw://002a9ebbc8c34ad074b368b3d41dbcbbdcd5138a721cdf4f06c515ad3d631412","dweb:/ipfs/QmRG88D5wevPpjwS7GvsoXXxQ5tem4bHPNvNPQ5AarazGk"],"license":"GPL-3.0"},"node_modules/@openzeppelin/contracts/access/Ownable.sol":{"keccak256":"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb","urls":["bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6","dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/Strings.sol":{"keccak256":"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792","urls":["bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453","dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"keccak256":"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf","urls":["bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c","dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435","urls":["bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c","dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b","urls":["bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df","dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/math/Math.sol":{"keccak256":"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d","urls":["bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875","dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol":{"keccak256":"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72","urls":["bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc","dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"],"license":"MIT"},"node_modules/account-abstraction/contracts/core/BasePaymaster.sol":{"keccak256":"0x156dd80127599c02937985a4fe44dd6424e29445af9aae886aff0f1993af43ab","urls":["bzz-raw://9a6afd9203f905b1d9a95f354e06d9b61328e5d27844d96100175718edb859ef","dweb:/ipfs/QmYyKGTMaTyjDKY1QyThLJL8BZgUrTAxrHL3SNmRJLqnji"],"license":"GPL-3.0"},"node_modules/account-abstraction/contracts/core/Helpers.sol":{"keccak256":"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6","urls":["bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e","dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc"],"license":"GPL-3.0"},"node_modules/account-abstraction/contracts/core/UserOperationLib.sol":{"keccak256":"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b","urls":["bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc","dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS"],"license":"GPL-3.0"},"node_modules/account-abstraction/contracts/interfaces/IAggregator.sol":{"keccak256":"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588","urls":["bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155","dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5"],"license":"GPL-3.0"},"node_modules/account-abstraction/contracts/interfaces/IEntryPoint.sol":{"keccak256":"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4","urls":["bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9","dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe"],"license":"GPL-3.0"},"node_modules/account-abstraction/contracts/interfaces/INonceManager.sol":{"keccak256":"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb","urls":["bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3","dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk"],"license":"GPL-3.0"},"node_modules/account-abstraction/contracts/interfaces/IPaymaster.sol":{"keccak256":"0x49d8dbf8a85b006bcd89bbc40e4e9e113997cc016007de85263bdae70572d07f","urls":["bzz-raw://bc0d83804c1b795d5c216b3518cd176c48f90db28550f267cbd89746d6b476c8","dweb:/ipfs/QmNdCm4c6hnt7f6Q8q21QjtCNZWWRUaMVEYnQHEv68VnKt"],"license":"GPL-3.0"},"node_modules/account-abstraction/contracts/interfaces/IStakeManager.sol":{"keccak256":"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04","urls":["bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00","dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj"],"license":"GPL-3.0-only"},"node_modules/account-abstraction/contracts/interfaces/PackedUserOperation.sol":{"keccak256":"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359","urls":["bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be","dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3"],"license":"GPL-3.0"},"node_modules/solady/src/utils/SafeTransferLib.sol":{"keccak256":"0x7d0de1ff3be5dc32635283280b000d4794015a1b61d7dae7f3ff7b0721b07210","urls":["bzz-raw://e307c9eece677565e7d584ee77c56134b5db38a70f557f9d2b1b308219276c0c","dweb:/ipfs/QmTEtqaTFgRBFGpJyb5o4v2w8yrSpcNThov4bNpcLr2tTR"],"license":"MIT"},"node_modules/solady/src/utils/SignatureCheckerLib.sol":{"keccak256":"0x0eb1575bafc5537fcb4bba519123c694db66840d7a13b7d3b867c55bf95e9c8b","urls":["bzz-raw://33b81539b6c6901660ab7c134789178146f18622813de5bc984d4c6dad7b13e6","dweb:/ipfs/QmNdG7Y74GbymWqbhMbMY92AHYxLug9sR5gNWfzwB7hM1b"],"license":"MIT"}},"version":1},"id":5}