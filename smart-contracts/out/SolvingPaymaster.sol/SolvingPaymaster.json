{"abi":[{"type":"constructor","inputs":[{"name":"_entryPoint","type":"address","internalType":"contract IEntryPoint"},{"name":"_verifyingSigner","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"addStake","inputs":[{"name":"unstakeDelaySec","type":"uint32","internalType":"uint32"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"deposit","inputs":[],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"entryPoint","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IEntryPoint"}],"stateMutability":"view"},{"type":"function","name":"getDeposit","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getHash","inputs":[{"name":"userOp","type":"tuple","internalType":"struct PackedUserOperation","components":[{"name":"sender","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"initCode","type":"bytes","internalType":"bytes"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"accountGasLimits","type":"bytes32","internalType":"bytes32"},{"name":"preVerificationGas","type":"uint256","internalType":"uint256"},{"name":"gasFees","type":"bytes32","internalType":"bytes32"},{"name":"paymasterAndData","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}]},{"name":"withdrawRequest","type":"tuple","internalType":"struct SolvingPaymaster.WithdrawRequest","components":[{"name":"signature","type":"bytes","internalType":"bytes"},{"name":"asset","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"expiry","type":"uint48","internalType":"uint48"}]}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"isValidWithdrawSignature","inputs":[{"name":"userOp","type":"tuple","internalType":"struct PackedUserOperation","components":[{"name":"sender","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"initCode","type":"bytes","internalType":"bytes"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"accountGasLimits","type":"bytes32","internalType":"bytes32"},{"name":"preVerificationGas","type":"uint256","internalType":"uint256"},{"name":"gasFees","type":"bytes32","internalType":"bytes32"},{"name":"paymasterAndData","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}]},{"name":"withdrawRequest","type":"tuple","internalType":"struct SolvingPaymaster.WithdrawRequest","components":[{"name":"signature","type":"bytes","internalType":"bytes"},{"name":"asset","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"expiry","type":"uint48","internalType":"uint48"}]}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"postOp","inputs":[{"name":"mode","type":"uint8","internalType":"enum IPaymaster.PostOpMode"},{"name":"context","type":"bytes","internalType":"bytes"},{"name":"actualGasCost","type":"uint256","internalType":"uint256"},{"name":"actualUserOpFeePerGas","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unlockStake","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"validatePaymasterUserOp","inputs":[{"name":"userOp","type":"tuple","internalType":"struct PackedUserOperation","components":[{"name":"sender","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"initCode","type":"bytes","internalType":"bytes"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"accountGasLimits","type":"bytes32","internalType":"bytes32"},{"name":"preVerificationGas","type":"uint256","internalType":"uint256"},{"name":"gasFees","type":"bytes32","internalType":"bytes32"},{"name":"paymasterAndData","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}]},{"name":"userOpHash","type":"bytes32","internalType":"bytes32"},{"name":"maxCost","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"context","type":"bytes","internalType":"bytes"},{"name":"validationData","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"verifyingSigner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"withdrawStake","inputs":[{"name":"withdrawAddress","type":"address","internalType":"address payable"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawTo","inputs":[{"name":"withdrawAddress","type":"address","internalType":"address payable"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawTokenExcess","inputs":[{"name":"token","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"error","name":"InvalidNonce","inputs":[{"name":"nonce","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"NoExcess","inputs":[]},{"type":"error","name":"OwnableInvalidOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"OwnableUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"}]}],"bytecode":{"object":"0x60c060409080825234620001ec578181620011308038038091620000248285620001f1565b833981010312620001ec5780516001600160a01b0391828216808303620001ec57602080920151938085168503620001ec573315620001d45760008054336001600160a01b031982168117835588519492938693869360249385939091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08880a36301ffc9a760e01b825263122a0e9b60e31b60048301525afa918215620001c857819262000180575b5050156200013d575060805260a05251610f0490816200022c823960805181818161017c01528181610326015281816103d80152818161044e015281816104e001528181610905015281816109de0152610e83015260a05181818161075f015281816108a901526109880152f35b60649084519062461bcd60e51b82526004820152601e60248201527f49456e747279506f696e7420696e74657266616365206d69736d6174636800006044820152fd5b9091508281813d8311620001c0575b6200019b8183620001f1565b81010312620001bc5751908115158203620001b957503880620000cf565b80fd5b5080fd5b503d6200018f565b508551903d90823e3d90fd5b8551631e4fbdf760e01b815260006004820152602490fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200021557604052565b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c80630396cb60146109b55780631c985b7a1461096257838163205c2878146108d85750806323d9ac9b1461089457806352b7512c1461065a578063715018a614610600578381637c627b2114610537575080638da5cb5b1461050f578063b0d691fe146104cb578063b73dd1da146104a457838163bb9fe6bf14610431578163c23a5cea146103aa57508063c399ec88146102f8578063cb74b145146101fd57838163d0e30db01461016c575063f2fde38b146100d957600080fd5b34610168576020366003190112610168576100f2610adc565b906100fb610d67565b6001600160a01b03918216928315610152575050600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b809391506003193601126101f9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b156101f4578390602483518095819363b760faf960e01b8352309083015234905af19081156101eb57506101d85750f35b6101e190610a44565b6101e85780f35b80fd5b513d84823e3d90fd5b505050fd5b5050fd5b509034610168576020806003193601126102f457610219610adc565b916001600160a01b0383169081156102ba573386526001835280862082600052835280600020549182156102aa5733808852600185528288206000928352855291902086905560145260345263a9059cbb60601b8452836044601082855af190816001855114161561028e575b838060345280f35b3b153d17101561029f578080610286565b6390b8ec188252601cfd5b815163360b1dbf60e11b81528690fd5b5162461bcd60e51b81528085018390526015602482015274496e76616c696420746f6b656e206164647265737360581b6044820152606490fd5b8380fd5b50903461016857826003193601126101685780516370a0823160e01b815230928101929092526020826024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9182156103a0578392610368575b6020838351908152f35b9091506020813d602011610398575b8161038460209383610a6e565b81010312610168576020925051903861035e565b3d9150610377565b81513d85823e3d90fd5b929050346101f95760203660031901126101f9576103c6610adc565b6103ce610d67565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116803b1561042d578592836024928651978895869463611d2e7560e11b865216908401525af19081156101eb57506101d85750f35b8580fd5b929050346101f957826003193601126101f95761044c610d67565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b156101f457815163bb9fe6bf60e01b81529284918491829084905af19081156101eb57506101d85750f35b5050346104c7576020906104c06104ba36610b9c565b90610c5b565b9051908152f35b5080fd5b5050346104c757816003193601126104c757517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050346104c757816003193601126104c757905490516001600160a01b039091168152602090f35b808484346101f95760803660031901126101f9576003813510156101f9576024359067ffffffffffffffff908183116105fc57366023840112156105fc578201358181116105fc578201602481019036821161042d57838591610598610e81565b03126105fc576105aa60248401610af2565b92604481013592831161042d576105c49201602401610b06565b90602060018060a01b038092169283865260018252019181835116600052845260016020528284209151166000526020526000205580f35b8480fd5b83346101e857806003193601126101e857610619610d67565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5091346101e857600319926060368501126104c75767ffffffffffffffff9080358281116102f4576101208183019682360301126102f45760e46106a7916106a0610e81565b0186610c28565b806034949294116105fc5783019060209384603319828503011261042d57603481013591821161042d576106df929101603401610b06565b80850180516060830180518752600286528787206001600160a01b03999295939192908a61070c83610ef0565b16600052875260ff89600020541661087c579082918a9493518952600288528989208561073883610ef0565b16600052885289600020600160ff1982541617905561078361075a8783610c5b565b8751907f0000000000000000000000000000000000000000000000000000000000000000610d93565b610875576001965b608087019485519a8761079d85610ef0565b16815260018b528c81208b8a01988951166000528b528c6000209182549384018094116108625750506108096107e665ffffffffffff96948f93946108329b9a99979555610ef0565b978d519e8f99168c8a01528d808a01525160a060608a0152610100890190610be8565b95511660808701525160a08601525160c0850152511660e083015203601f198101875286610a6e565b60ff6108478551968688978852870190610be8565b9365ffffffffffff60a01b9060a01b16911617908301520390f35b634e487b7160e01b825260119052602490fd5b889661078b565b6024848a8551905191632c4dce9b60e21b8352820152fd5b5050346104c757816003193601126104c757517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b929050346101f957806003193601126101f9576108f3610adc565b6108fb610d67565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116803b1561042d578592836044928651978895869463040b850f60e31b8652169084015260243560248401525af19081156101eb57506101d85750f35b5050346104c7576020906109ac61098361097b36610b9c565b809291610c5b565b9051907f0000000000000000000000000000000000000000000000000000000000000000610d93565b90519015158152f35b509060203660031901126101685782823563ffffffff81168091036104c7576109dc610d67565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031693843b156101685760249084519586938492621cb65b60e51b845283015234905af19081156101eb5750610a38575080f35b610a4190610a44565b80f35b67ffffffffffffffff8111610a5857604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610a5857604052565b92919267ffffffffffffffff8211610a585760405191610aba601f8201601f191660200184610a6e565b829481845281830111610ad7578281602093846000960137010152565b600080fd5b600435906001600160a01b0382168203610ad757565b35906001600160a01b0382168203610ad757565b919060a083820312610ad7576040519060a082019367ffffffffffffffff9483811086821117610a585760405282948135908111610ad757810182601f82011215610ad757608092816020610b5d93359101610a90565b8352610b6b60208201610af2565b6020840152604081013560408401526060810135606084015201359065ffffffffffff82168203610ad75760800152565b90600319604081840112610ad75760043567ffffffffffffffff91828211610ad757610120908286030112610ad75760040192602435918211610ad757610be591600401610b06565b90565b919082519283825260005b848110610c14575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610bf3565b903590601e1981360301821215610ad7570180359067ffffffffffffffff8211610ad757602001918136038313610ad757565b6001600160a01b039190610c7c610c756040830183610c28565b3691610a90565b6020815191012091610c94610c756060840184610c28565b6020815191012091610ca960e0820182610c28565b603492919211610ad75760c08660208501511691601460408601519465ffffffffffff6080606089015198015116976040519960208b019b8535168c52602085013560408c015260608b015260808a0152608083013560a08a015201358288015260a081013560e0880152013561010086015246610120860152306101408601526101608501526101808401526101a08301526101c0908183015281526101e0810181811067ffffffffffffffff821117610a585760405251902090565b6000546001600160a01b03163303610d7b57565b60405163118cdaa760e01b8152336004820152602490fd5b60009392919084906001600160a01b03811615610e7757604091825190855180604014610e5457604114610e1857505b8615610dd1575b5050505050565b60209394959650630b135d3f60e11b948582526004820152602481019586938452805185019081604484019160045afa5060443d01915afa91511416903880808080610dca565b9650606080860151881a6020528386015190525b83875260208086015184526001608089825afa51821896606097881b3d119752808352610dc3565b508584015160ff81901c601b016020526001600160ff1b03166060529650610e2c565b5060009450505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610eb357565b60405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606490fd5b356001600160a01b0381168103610ad7579056","sourceMap":"684:7886:4:-:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;684:7886:4;;;;;;;;;;;;;;;;;;;;;;950:10:26;1273:26:5;1269:95;;-1:-1:-1;684:7886:4;;950:10:26;-1:-1:-1;;;;;;684:7886:4;;;;;;;;;-1:-1:-1;;;;684:7886:4;;;;;;950:10:26;;684:7886:4;3052:40:5;-1:-1:-1;;3052:40:5;-1:-1:-1;;;1271:78:26;;-1:-1:-1;;;1271:78:26;;;684:7886:4;1271:78:26;;;;;;;;;;;-1:-1:-1;684:7886:4;;;;;1023:24:26;;;2287:34:4;;684:7886;;;;;;;1023:24:26;684:7886:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2287:34;684:7886;;;;;;;;;;;;;;;;;;;;;;;;;;;1271:78:26;684:7886:4;;;;;;;;;;;;;;1271:78:26;;;;;;;;;;;;;;;;;:::i;:::-;;;684:7886:4;;;;;;;;;;;;;1271:78:26;;;;;684:7886:4;;;;;;;1271:78:26;;;;;;684:7886:4;;;;;;;;;;;1269:95:5;684:7886:4;;-1:-1:-1;;;1322:31:5;;-1:-1:-1;1322:31:5;;;684:7886:4;;;1322:31:5;684:7886:4;-1:-1:-1;684:7886:4;;;;;;;-1:-1:-1;;684:7886:4;;;;-1:-1:-1;;;;;684:7886:4;;;;;;;;;;:::o;:::-;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6040608081526004908136101561001557600080fd5b600091823560e01c80630396cb60146109b55780631c985b7a1461096257838163205c2878146108d85750806323d9ac9b1461089457806352b7512c1461065a578063715018a614610600578381637c627b2114610537575080638da5cb5b1461050f578063b0d691fe146104cb578063b73dd1da146104a457838163bb9fe6bf14610431578163c23a5cea146103aa57508063c399ec88146102f8578063cb74b145146101fd57838163d0e30db01461016c575063f2fde38b146100d957600080fd5b34610168576020366003190112610168576100f2610adc565b906100fb610d67565b6001600160a01b03918216928315610152575050600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b809391506003193601126101f9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b156101f4578390602483518095819363b760faf960e01b8352309083015234905af19081156101eb57506101d85750f35b6101e190610a44565b6101e85780f35b80fd5b513d84823e3d90fd5b505050fd5b5050fd5b509034610168576020806003193601126102f457610219610adc565b916001600160a01b0383169081156102ba573386526001835280862082600052835280600020549182156102aa5733808852600185528288206000928352855291902086905560145260345263a9059cbb60601b8452836044601082855af190816001855114161561028e575b838060345280f35b3b153d17101561029f578080610286565b6390b8ec188252601cfd5b815163360b1dbf60e11b81528690fd5b5162461bcd60e51b81528085018390526015602482015274496e76616c696420746f6b656e206164647265737360581b6044820152606490fd5b8380fd5b50903461016857826003193601126101685780516370a0823160e01b815230928101929092526020826024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9182156103a0578392610368575b6020838351908152f35b9091506020813d602011610398575b8161038460209383610a6e565b81010312610168576020925051903861035e565b3d9150610377565b81513d85823e3d90fd5b929050346101f95760203660031901126101f9576103c6610adc565b6103ce610d67565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116803b1561042d578592836024928651978895869463611d2e7560e11b865216908401525af19081156101eb57506101d85750f35b8580fd5b929050346101f957826003193601126101f95761044c610d67565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b156101f457815163bb9fe6bf60e01b81529284918491829084905af19081156101eb57506101d85750f35b5050346104c7576020906104c06104ba36610b9c565b90610c5b565b9051908152f35b5080fd5b5050346104c757816003193601126104c757517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050346104c757816003193601126104c757905490516001600160a01b039091168152602090f35b808484346101f95760803660031901126101f9576003813510156101f9576024359067ffffffffffffffff908183116105fc57366023840112156105fc578201358181116105fc578201602481019036821161042d57838591610598610e81565b03126105fc576105aa60248401610af2565b92604481013592831161042d576105c49201602401610b06565b90602060018060a01b038092169283865260018252019181835116600052845260016020528284209151166000526020526000205580f35b8480fd5b83346101e857806003193601126101e857610619610d67565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5091346101e857600319926060368501126104c75767ffffffffffffffff9080358281116102f4576101208183019682360301126102f45760e46106a7916106a0610e81565b0186610c28565b806034949294116105fc5783019060209384603319828503011261042d57603481013591821161042d576106df929101603401610b06565b80850180516060830180518752600286528787206001600160a01b03999295939192908a61070c83610ef0565b16600052875260ff89600020541661087c579082918a9493518952600288528989208561073883610ef0565b16600052885289600020600160ff1982541617905561078361075a8783610c5b565b8751907f0000000000000000000000000000000000000000000000000000000000000000610d93565b610875576001965b608087019485519a8761079d85610ef0565b16815260018b528c81208b8a01988951166000528b528c6000209182549384018094116108625750506108096107e665ffffffffffff96948f93946108329b9a99979555610ef0565b978d519e8f99168c8a01528d808a01525160a060608a0152610100890190610be8565b95511660808701525160a08601525160c0850152511660e083015203601f198101875286610a6e565b60ff6108478551968688978852870190610be8565b9365ffffffffffff60a01b9060a01b16911617908301520390f35b634e487b7160e01b825260119052602490fd5b889661078b565b6024848a8551905191632c4dce9b60e21b8352820152fd5b5050346104c757816003193601126104c757517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b929050346101f957806003193601126101f9576108f3610adc565b6108fb610d67565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116803b1561042d578592836044928651978895869463040b850f60e31b8652169084015260243560248401525af19081156101eb57506101d85750f35b5050346104c7576020906109ac61098361097b36610b9c565b809291610c5b565b9051907f0000000000000000000000000000000000000000000000000000000000000000610d93565b90519015158152f35b509060203660031901126101685782823563ffffffff81168091036104c7576109dc610d67565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031693843b156101685760249084519586938492621cb65b60e51b845283015234905af19081156101eb5750610a38575080f35b610a4190610a44565b80f35b67ffffffffffffffff8111610a5857604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610a5857604052565b92919267ffffffffffffffff8211610a585760405191610aba601f8201601f191660200184610a6e565b829481845281830111610ad7578281602093846000960137010152565b600080fd5b600435906001600160a01b0382168203610ad757565b35906001600160a01b0382168203610ad757565b919060a083820312610ad7576040519060a082019367ffffffffffffffff9483811086821117610a585760405282948135908111610ad757810182601f82011215610ad757608092816020610b5d93359101610a90565b8352610b6b60208201610af2565b6020840152604081013560408401526060810135606084015201359065ffffffffffff82168203610ad75760800152565b90600319604081840112610ad75760043567ffffffffffffffff91828211610ad757610120908286030112610ad75760040192602435918211610ad757610be591600401610b06565b90565b919082519283825260005b848110610c14575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610bf3565b903590601e1981360301821215610ad7570180359067ffffffffffffffff8211610ad757602001918136038313610ad757565b6001600160a01b039190610c7c610c756040830183610c28565b3691610a90565b6020815191012091610c94610c756060840184610c28565b6020815191012091610ca960e0820182610c28565b603492919211610ad75760c08660208501511691601460408601519465ffffffffffff6080606089015198015116976040519960208b019b8535168c52602085013560408c015260608b015260808a0152608083013560a08a015201358288015260a081013560e0880152013561010086015246610120860152306101408601526101608501526101808401526101a08301526101c0908183015281526101e0810181811067ffffffffffffffff821117610a585760405251902090565b6000546001600160a01b03163303610d7b57565b60405163118cdaa760e01b8152336004820152602490fd5b60009392919084906001600160a01b03811615610e7757604091825190855180604014610e5457604114610e1857505b8615610dd1575b5050505050565b60209394959650630b135d3f60e11b948582526004820152602481019586938452805185019081604484019160045afa5060443d01915afa91511416903880808080610dca565b9650606080860151881a6020528386015190525b83875260208086015184526001608089825afa51821896606097881b3d119752808352610dc3565b508584015160ff81901c601b016020526001600160ff1b03166060529650610e2c565b5060009450505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610eb357565b60405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606490fd5b356001600160a01b0381168103610ad7579056","sourceMap":"684:7886:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4943:35:26;684:7886:4;4943:35:26;;;684:7886:4;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;684:7886:4;;;;;;:::i;:::-;1500:62:5;;;:::i;:::-;-1:-1:-1;;;;;684:7886:4;;;;2627:22:5;;2623:91;;684:7886:4;;;;;;;;;;;;;;3052:40:5;684:7886:4;3052:40:5;;684:7886:4;;2623:91:5;684:7886:4;-1:-1:-1;;;2672:31:5;;;;;684:7886:4;;;;;2672:31:5;684:7886:4;;;;;;;;;;;;;;;;4030:10:26;-1:-1:-1;;;;;684:7886:4;;4030:53:26;;;;;684:7886:4;;;;;;;;;;;;4030:53:26;;4077:4;4030:53;;;684:7886:4;4058:9:26;4030:53;;;;;;;;;;;684:7886:4;;4030:53:26;;;;:::i;:::-;684:7886:4;;4030:53:26;684:7886:4;;;;4030:53:26;684:7886:4;;;;;;;;4030:53:26;684:7886:4;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;684:7886:4;;;6714:19;;684:7886;;6800:10;684:7886;;6786:13;684:7886;;;;;;;;;;;;;;6832:11;;;6828:34;;6800:10;684:7886;;;6786:13;684:7886;;;;;;;;;;;;;;;;;13252:754:58;;;;-1:-1:-1;;;13252:754:58;;6800:10:4;13252:754:58;;6800:10:4;13252:754:58;;;;;6786:13:4;13252:754:58;;;;;;;684:7886:4;13252:754:58;;;;684:7886:4;;13252:754:58;;;;;;;;;;;;;;;;;;;6828:34:4;684:7886;;-1:-1:-1;;;6852:10:4;;684:7886;;6852:10;684:7886;;-1:-1:-1;;;684:7886:4;;;;;;;;;;;;;-1:-1:-1;;;684:7886:4;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4943:35:26;;4972:4;4943:35;;;684:7886:4;;;;4943:35:26;684:7886:4;;;4943:10:26;-1:-1:-1;;;;;684:7886:4;4943:35:26;;;;;;;;;;;684:7886:4;4943:35:26;684:7886:4;;;;;;;4943:35:26;;;;;;;;;;;;;;;;;;:::i;:::-;;;684:7886:4;;;;4943:35:26;684:7886:4;;;4943:35:26;;;;;;;-1:-1:-1;4943:35:26;;;684:7886:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;684:7886:4;;;;;;:::i;:::-;1500:62:5;;:::i;:::-;-1:-1:-1;;;;;5533:10:26;684:7886:4;;5533:41:26;;;;;684:7886:4;;;;;;;;;;;;;;;5533:41:26;;684:7886:4;5533:41:26;;;684:7886:4;5533:41:26;;;;;;;;;;684:7886:4;;5533:41:26;684:7886:4;;;;;;;;;;;;;;;;;;1500:62:5;;:::i;:::-;5196:10:26;-1:-1:-1;;;;;684:7886:4;;5196:24:26;;;;;684:7886:4;;-1:-1:-1;;;5196:24:26;;684:7886:4;;;;;;;;;5196:24:26;;;;;;;;;;684:7886:4;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;544:39:26;-1:-1:-1;;;;;684:7886:4;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;684:7886:4;;;;;;;;;;;;;;;;;-1:-1:-1;;684:7886:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2225:278:26;;;;;:::i;:::-;684:7886:4;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;8211:21;860:38:26;;;;684:7886:4;;;;;;;;;;;860:38:26;;684:7886:4;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:5;;:::i;:::-;684:7886:4;;;-1:-1:-1;;;;;;684:7886:4;;;;-1:-1:-1;;;;;684:7886:4;3052:40:5;684:7886:4;;3052:40:5;684:7886:4;;;;;;;;-1:-1:-1;;684:7886:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5314:23;;1614:22:26;;;:::i;:::-;5314:23:4;;;:::i;:::-;860:38:26;490:2:28;860:38:26;;;;;;5303:86:4;;684:7886;;860:38:26;;;;890:21:4;;;;;;;490:2:28;860:38:26;;890:21:4;;;;;;;;;;490:2:28;890:21:4;;:::i;:::-;5425:22;;;860:38:26;;684:7886:4;5473:21;;860:38:26;;890:21:4;;5462:10;890:21;;;;;-1:-1:-1;;;;;684:7886:4;860:38:26;;;5473:21:4;;684:7886;;5496:13;684:7886;5496:13;:::i;:::-;684:7886;;;;;890:21;684:7886;;;890:21;;5458:121;;860:38:26;;;;;;;890:21:4;;5462:10;890:21;;;;;5623:13;;;;:::i;:::-;684:7886;;;;;;;;;890:21;;;;;;;;4415:139;4485:32;;;;:::i;:::-;4519:25;;4468:15;;4415:139;:::i;:::-;5751:17;;684:7886;5751:17;;5781:22;;;860:38:26;;;5837:13:4;;;;;:::i;:::-;684:7886;;;;;;;;;5852:21;;;860:38:26;;;684:7886:4;;;;;;;;;;;890:21;;;;;;;;;;;6058:13;684:7886;890:21;;;;;6047:42;890:21;;;;;;6058:13;:::i;:::-;684:7886;;;;;;;6047:42;;;684:7886;890:21;;;;;;5808:3;684:7886;890:21;;;;;;;;:::i;:::-;;;684:7886;5781:22;890:21;;684:7886;890:21;5808:3;890:21;;684:7886;890:21;;;;684:7886;890:21;684:7886;;890:21;;860:38:26;6047:42:4;-1:-1:-1;;6047:42:4;;;;;;:::i;:::-;890:21;684:7886;;;;;;;;;;;;;:::i;:::-;860:38:26;684:7886:4;860:38:26;;;5808:3:4;860:38:26;;890:21:4;;5750:62;684:7886;;;;;;;890:21;-1:-1:-1;;;890:21:4;;;;;684:7886;;890:21;5751:17;;;;;5458:121;684:7886;860:38:26;;;;684:7886:4;;5533:35;;;;;;;;684:7886;5533:35;684:7886;;;;;;;;;;;;;;;786:40;-1:-1:-1;;;;;684:7886:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:5;;:::i;:::-;-1:-1:-1;;;;;4373:10:26;684:7886:4;;4373:46:26;;;;;684:7886:4;;;;;;;;;;;;;;;4373:46:26;;684:7886:4;4373:46:26;;;684:7886:4;;;;;;;4373:46:26;;;;;;;;;;684:7886:4;;;;;;;;;;4415:139;4485:32;684:7886;;;:::i;:::-;4485:32;;;;:::i;:::-;4519:25;;4468:15;;4415:139;:::i;:::-;684:7886;;;;;;;;;-1:-1:-1;684:7886:4;;;-1:-1:-1;;684:7886:4;;;;;;;;;;;;;;;1500:62:5;;:::i;:::-;4730:10:26;-1:-1:-1;;;;;684:7886:4;;4730:54:26;;;;;684:7886:4;;;;;;;;;;;;4730:54:26;;;;684:7886:4;4757:9:26;4730:54;;;;;;;;;;;684:7886:4;;;4730:54:26;;;;:::i;:::-;684:7886:4;;;;;;;;;;:::o;:::-;890:21;;;684:7886;;;;;;;;;;;6047:42;;684:7886;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;6047:42;684:7886;;-1:-1:-1;;684:7886:4;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;684:7886:4;;;;;;:::o;:::-;-1:-1:-1;684:7886:4;;;;;;-1:-1:-1;;;;;684:7886:4;;;;;;:::o;:::-;;;-1:-1:-1;;;;;684:7886:4;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;684:7886:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6047:42;;684:7886;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2749:1117::-;-1:-1:-1;;;;;684:7886:4;2749:1117;684:7886;3187:15;;;;2749:1117;3187:15;:::i;:::-;684:7886;;;:::i;:::-;3147:12;684:7886;;;;3177:26;3231:15;684:7886;3231:15;;;;;;:::i;684:7886::-;3147:12;684:7886;;;;3221:26;3368:23;;;;;;;:::i;:::-;490:2:28;860:38:26;;;;;;3601:14:4;3695:21;3147:12;3695:21;;860:38:26;684:7886:4;3734:22;372:2:28;3187:15:4;3734:22;;860:38:26;3774:21:4;684:7886;3265:23;3231:15;3774:21;;860:38:26;3813:22:4;;860:38:26;684:7886:4;;3187:15;684:7886;3095:754;3147:12;3095:754;;823:61:28;;;684:7886:4;;;3147:12;;;684:7886;3187:15;860:38:26;;684:7886:4;3231:15;860:38:26;;684:7886:4;3265:23;860:38:26;;684:7886:4;3265:23;;;684:7886;3558:25;860:38:26;;684:7886:4;860:38:26;;;;;684:7886:4;3558:25;;;684:7886;3368:23;860:38:26;;684:7886:4;3601:14;684:7886;860:38:26;;;684:7886:4;3633:13;860:38:26;;;684:7886:4;3672:4;860:38:26;;;684:7886:4;860:38:26;;;684:7886:4;860:38:26;;;684:7886:4;860:38:26;;;684:7886:4;860:38:26;;;;;;3095:754:4;;860:38:26;684:7886:4;;;;;;;;;;;3187:15;684:7886;;3072:787;;2749:1117;:::o;1796:162:5:-;1710:6;684:7886:4;-1:-1:-1;;;;;684:7886:4;735:10:17;1855:23:5;1851:101;;1796:162::o;1851:101::-;684:7886:4;;-1:-1:-1;;;1901:40:5;;735:10:17;1901:40:5;;;684:7886:4;;;1901:40:5;1974:1926:59;684:7886:4;;1974:1926:59;;;684:7886:4;;-1:-1:-1;;;;;684:7886:4;;2136:20:59;2132:40;;2225:1669;;;;;;;;;;;;;684:7886:4;;;2225:1669:59;;;;;;;1974:1926;;;;;:::o;2225:1669::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2225:1669:59;;;;;;;;;;;;-1:-1:-1;;;;;2225:1669:59;;;;-1:-1:-1;2225:1669:59;;2132:40;-1:-1:-1;684:7886:4;;-1:-1:-1;;;;2158:14:59:o;5660:135:26:-;5751:10;-1:-1:-1;;;;;684:7886:4;5729:10:26;:33;684:7886:4;;5660:135:26:o;684:7886:4:-;;;-1:-1:-1;;;684:7886:4;;;;;;;;;;;;-1:-1:-1;;;684:7886:4;;;;;;;890:21;;-1:-1:-1;;;;;684:7886:4;;;;;;890:21;:::o","linkReferences":{},"immutableReferences":{"5837":[{"start":380,"length":32},{"start":806,"length":32},{"start":984,"length":32},{"start":1102,"length":32},{"start":1248,"length":32},{"start":2309,"length":32},{"start":2526,"length":32},{"start":3715,"length":32}],"806":[{"start":1887,"length":32},{"start":2217,"length":32},{"start":2440,"length":32}]}},"methodIdentifiers":{"addStake(uint32)":"0396cb60","deposit()":"d0e30db0","entryPoint()":"b0d691fe","getDeposit()":"c399ec88","getHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),(bytes,address,uint256,uint256,uint48))":"b73dd1da","isValidWithdrawSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),(bytes,address,uint256,uint256,uint48))":"1c985b7a","owner()":"8da5cb5b","postOp(uint8,bytes,uint256,uint256)":"7c627b21","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","unlockStake()":"bb9fe6bf","validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"52b7512c","verifyingSigner()":"23d9ac9b","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878","withdrawTokenExcess(address)":"cb74b145"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_verifyingSigner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"InvalidNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoExcess\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"}],\"internalType\":\"struct SolvingPaymaster.WithdrawRequest\",\"name\":\"withdrawRequest\",\"type\":\"tuple\"}],\"name\":\"getHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"}],\"internalType\":\"struct SolvingPaymaster.WithdrawRequest\",\"name\":\"withdrawRequest\",\"type\":\"tuple\"}],\"name\":\"isValidWithdrawSignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualUserOpFeePerGas\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyingSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawTokenExcess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidNonce(uint256)\":[{\"params\":{\"nonce\":\"The already used nonce.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The unstake delay for this paymaster. Can only be increased.\"}},\"isValidWithdrawSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),(bytes,address,uint256,uint256,uint48))\":{\"details\":\"Does not validate nonce or expiry.\",\"params\":{\"userOp\":\"The user operation.\",\"withdrawRequest\":\"The withdraw request.\"},\"returns\":{\"_0\":\"`true` if the signature is valid, else `false`.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas used so far (without this postOp call).\",\"actualUserOpFeePerGas\":\"- the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas                        and maxPriorityFee (and basefee)                        It is not the same as tx.gasprice, which is what the bundler pays.\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. The paymaster still has to pay for gas.                        postOpReverted - never passed in a call to postOp().\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    other values are invalid for paymaster.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"- Amount to withdraw.\",\"withdrawAddress\":\"- Target to send to.\"}},\"withdrawTokenExcess(address)\":{\"details\":\"Can be called back during the `UserOperation` execution to sponsor funds for non-gas related      use cases (e.g., swap or mint).\",\"params\":{\"token\":\"The ERC20 token address to withdraw\"}}},\"stateVariables\":{\"_nonceUsed\":{\"details\":\"Mappings keeping track of already used nonces per user to prevent replays of withdraw requests.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidNonce(uint256)\":[{\"notice\":\"Thrown when trying to replay a withdraw request with the same nonce.\"}],\"NoExcess()\":[{\"notice\":\"Thrown when trying to withdraw funds but nothing is available.\"}]},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"Add a deposit for this paymaster, used for paying for transaction fees.\"},\"getDeposit()\":{\"notice\":\"Return current paymaster's deposit on the entryPoint.\"},\"getHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),(bytes,address,uint256,uint256,uint48))\":{\"notice\":\"return the hash we're going to sign off-chain (and validate on-chain) this method is called by the off-chain service, to sign the request. it is called on-chain from the validatePaymasterUserOp, to validate the signature. note that this signature covers all fields of the UserOperation, except the \\\"paymasterAndData\\\", which will carry the signature itself.\"},\"isValidWithdrawSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),(bytes,address,uint256,uint256,uint48))\":{\"notice\":\"Returns whether the `withdrawRequest` signature is valid for the given `account`.\"},\"postOp(uint8,bytes,uint256,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"unlockStake()\":{\"notice\":\"Unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw value from the deposit.\"},\"withdrawTokenExcess(address)\":{\"notice\":\"Allows the sender to withdraw any available ERC20 tokens associated with their account.\"}},\"notice\":\"Paymaster that fronts funds based on a signature/ proof.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/paymasters/SolvingPaymaster.sol\":\"SolvingPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":account-abstraction/=node_modules/account-abstraction/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solady/=node_modules/solady/\"],\"viaIR\":true},\"sources\":{\"contracts/paymasters/SolvingPaymaster.sol\":{\"keccak256\":\"0x0cd9c2711c4f09830c365476533bb6b290d84f9e6b787df79a21e518326a84f4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://002a9ebbc8c34ad074b368b3d41dbcbbdcd5138a721cdf4f06c515ad3d631412\",\"dweb:/ipfs/QmRG88D5wevPpjwS7GvsoXXxQ5tem4bHPNvNPQ5AarazGk\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"node_modules/account-abstraction/contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0x156dd80127599c02937985a4fe44dd6424e29445af9aae886aff0f1993af43ab\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9a6afd9203f905b1d9a95f354e06d9b61328e5d27844d96100175718edb859ef\",\"dweb:/ipfs/QmYyKGTMaTyjDKY1QyThLJL8BZgUrTAxrHL3SNmRJLqnji\"]},\"node_modules/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"node_modules/account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"node_modules/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"node_modules/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9\",\"dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe\"]},\"node_modules/account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]},\"node_modules/account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x49d8dbf8a85b006bcd89bbc40e4e9e113997cc016007de85263bdae70572d07f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bc0d83804c1b795d5c216b3518cd176c48f90db28550f267cbd89746d6b476c8\",\"dweb:/ipfs/QmNdCm4c6hnt7f6Q8q21QjtCNZWWRUaMVEYnQHEv68VnKt\"]},\"node_modules/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]},\"node_modules/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"node_modules/solady/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x7d0de1ff3be5dc32635283280b000d4794015a1b61d7dae7f3ff7b0721b07210\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e307c9eece677565e7d584ee77c56134b5db38a70f557f9d2b1b308219276c0c\",\"dweb:/ipfs/QmTEtqaTFgRBFGpJyb5o4v2w8yrSpcNThov4bNpcLr2tTR\"]},\"node_modules/solady/src/utils/SignatureCheckerLib.sol\":{\"keccak256\":\"0x0eb1575bafc5537fcb4bba519123c694db66840d7a13b7d3b867c55bf95e9c8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33b81539b6c6901660ab7c134789178146f18622813de5bc984d4c6dad7b13e6\",\"dweb:/ipfs/QmNdG7Y74GbymWqbhMbMY92AHYxLug9sR5gNWfzwB7hM1b\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IEntryPoint","name":"_entryPoint","type":"address"},{"internalType":"address","name":"_verifyingSigner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"type":"error","name":"InvalidNonce"},{"inputs":[],"type":"error","name":"NoExcess"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"type":"error","name":"OwnableInvalidOwner"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"type":"error","name":"OwnableUnauthorizedAccount"},{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"stateMutability":"payable","type":"function","name":"addStake"},{"inputs":[],"stateMutability":"payable","type":"function","name":"deposit"},{"inputs":[],"stateMutability":"view","type":"function","name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple","components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}]},{"internalType":"struct SolvingPaymaster.WithdrawRequest","name":"withdrawRequest","type":"tuple","components":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint48","name":"expiry","type":"uint48"}]}],"stateMutability":"view","type":"function","name":"getHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple","components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}]},{"internalType":"struct SolvingPaymaster.WithdrawRequest","name":"withdrawRequest","type":"tuple","components":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint48","name":"expiry","type":"uint48"}]}],"stateMutability":"view","type":"function","name":"isValidWithdrawSignature","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"internalType":"uint256","name":"actualUserOpFeePerGas","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"postOp"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceOwnership"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unlockStake"},{"inputs":[{"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple","components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}]},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"verifyingSigner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"withdrawStake"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"withdrawTo"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"withdrawTokenExcess"}],"devdoc":{"kind":"dev","methods":{"addStake(uint32)":{"params":{"unstakeDelaySec":"- The unstake delay for this paymaster. Can only be increased."}},"isValidWithdrawSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),(bytes,address,uint256,uint256,uint48))":{"details":"Does not validate nonce or expiry.","params":{"userOp":"The user operation.","withdrawRequest":"The withdraw request."},"returns":{"_0":"`true` if the signature is valid, else `false`."}},"owner()":{"details":"Returns the address of the current owner."},"postOp(uint8,bytes,uint256,uint256)":{"params":{"actualGasCost":"- Actual gas used so far (without this postOp call).","actualUserOpFeePerGas":"- the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas                        and maxPriorityFee (and basefee)                        It is not the same as tx.gasprice, which is what the bundler pays.","context":"- The context value returned by validatePaymasterUserOp","mode":"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. The paymaster still has to pay for gas.                        postOpReverted - never passed in a call to postOp()."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":{"params":{"maxCost":"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).","userOp":"- The user operation.","userOpHash":"- Hash of the user's request data."},"returns":{"context":"       - Value to send to a postOp. Zero length to signify postOp is not required.","validationData":"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    other values are invalid for paymaster.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly."}},"withdrawStake(address)":{"params":{"withdrawAddress":"- The address to send withdrawn value."}},"withdrawTo(address,uint256)":{"params":{"amount":"- Amount to withdraw.","withdrawAddress":"- Target to send to."}},"withdrawTokenExcess(address)":{"details":"Can be called back during the `UserOperation` execution to sponsor funds for non-gas related      use cases (e.g., swap or mint).","params":{"token":"The ERC20 token address to withdraw"}}},"version":1},"userdoc":{"kind":"user","methods":{"addStake(uint32)":{"notice":"Add stake for this paymaster. This method can also carry eth value to add to the current stake."},"deposit()":{"notice":"Add a deposit for this paymaster, used for paying for transaction fees."},"getDeposit()":{"notice":"Return current paymaster's deposit on the entryPoint."},"getHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),(bytes,address,uint256,uint256,uint48))":{"notice":"return the hash we're going to sign off-chain (and validate on-chain) this method is called by the off-chain service, to sign the request. it is called on-chain from the validatePaymasterUserOp, to validate the signature. note that this signature covers all fields of the UserOperation, except the \"paymasterAndData\", which will carry the signature itself."},"isValidWithdrawSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),(bytes,address,uint256,uint256,uint48))":{"notice":"Returns whether the `withdrawRequest` signature is valid for the given `account`."},"postOp(uint8,bytes,uint256,uint256)":{"notice":"Post-operation handler. Must verify sender is the entryPoint."},"unlockStake()":{"notice":"Unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again"},"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":{"notice":"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns."},"withdrawStake(address)":{"notice":"Withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)"},"withdrawTo(address,uint256)":{"notice":"Withdraw value from the deposit."},"withdrawTokenExcess(address)":{"notice":"Allows the sender to withdraw any available ERC20 tokens associated with their account."}},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","account-abstraction/=node_modules/account-abstraction/","ds-test/=node_modules/ds-test/src/","forge-std/=node_modules/forge-std/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","solady/=node_modules/solady/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none","appendCBOR":false},"compilationTarget":{"contracts/paymasters/SolvingPaymaster.sol":"SolvingPaymaster"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"contracts/paymasters/SolvingPaymaster.sol":{"keccak256":"0x0cd9c2711c4f09830c365476533bb6b290d84f9e6b787df79a21e518326a84f4","urls":["bzz-raw://002a9ebbc8c34ad074b368b3d41dbcbbdcd5138a721cdf4f06c515ad3d631412","dweb:/ipfs/QmRG88D5wevPpjwS7GvsoXXxQ5tem4bHPNvNPQ5AarazGk"],"license":"GPL-3.0"},"node_modules/@openzeppelin/contracts/access/Ownable.sol":{"keccak256":"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb","urls":["bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6","dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/Strings.sol":{"keccak256":"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792","urls":["bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453","dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"keccak256":"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf","urls":["bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c","dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435","urls":["bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c","dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b","urls":["bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df","dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/math/Math.sol":{"keccak256":"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d","urls":["bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875","dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol":{"keccak256":"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72","urls":["bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc","dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"],"license":"MIT"},"node_modules/account-abstraction/contracts/core/BasePaymaster.sol":{"keccak256":"0x156dd80127599c02937985a4fe44dd6424e29445af9aae886aff0f1993af43ab","urls":["bzz-raw://9a6afd9203f905b1d9a95f354e06d9b61328e5d27844d96100175718edb859ef","dweb:/ipfs/QmYyKGTMaTyjDKY1QyThLJL8BZgUrTAxrHL3SNmRJLqnji"],"license":"GPL-3.0"},"node_modules/account-abstraction/contracts/core/Helpers.sol":{"keccak256":"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6","urls":["bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e","dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc"],"license":"GPL-3.0"},"node_modules/account-abstraction/contracts/core/UserOperationLib.sol":{"keccak256":"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b","urls":["bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc","dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS"],"license":"GPL-3.0"},"node_modules/account-abstraction/contracts/interfaces/IAggregator.sol":{"keccak256":"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588","urls":["bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155","dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5"],"license":"GPL-3.0"},"node_modules/account-abstraction/contracts/interfaces/IEntryPoint.sol":{"keccak256":"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4","urls":["bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9","dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe"],"license":"GPL-3.0"},"node_modules/account-abstraction/contracts/interfaces/INonceManager.sol":{"keccak256":"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb","urls":["bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3","dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk"],"license":"GPL-3.0"},"node_modules/account-abstraction/contracts/interfaces/IPaymaster.sol":{"keccak256":"0x49d8dbf8a85b006bcd89bbc40e4e9e113997cc016007de85263bdae70572d07f","urls":["bzz-raw://bc0d83804c1b795d5c216b3518cd176c48f90db28550f267cbd89746d6b476c8","dweb:/ipfs/QmNdCm4c6hnt7f6Q8q21QjtCNZWWRUaMVEYnQHEv68VnKt"],"license":"GPL-3.0"},"node_modules/account-abstraction/contracts/interfaces/IStakeManager.sol":{"keccak256":"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04","urls":["bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00","dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj"],"license":"GPL-3.0-only"},"node_modules/account-abstraction/contracts/interfaces/PackedUserOperation.sol":{"keccak256":"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359","urls":["bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be","dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3"],"license":"GPL-3.0"},"node_modules/solady/src/utils/SafeTransferLib.sol":{"keccak256":"0x7d0de1ff3be5dc32635283280b000d4794015a1b61d7dae7f3ff7b0721b07210","urls":["bzz-raw://e307c9eece677565e7d584ee77c56134b5db38a70f557f9d2b1b308219276c0c","dweb:/ipfs/QmTEtqaTFgRBFGpJyb5o4v2w8yrSpcNThov4bNpcLr2tTR"],"license":"MIT"},"node_modules/solady/src/utils/SignatureCheckerLib.sol":{"keccak256":"0x0eb1575bafc5537fcb4bba519123c694db66840d7a13b7d3b867c55bf95e9c8b","urls":["bzz-raw://33b81539b6c6901660ab7c134789178146f18622813de5bc984d4c6dad7b13e6","dweb:/ipfs/QmNdG7Y74GbymWqbhMbMY92AHYxLug9sR5gNWfzwB7hM1b"],"license":"MIT"}},"version":1},"id":4}